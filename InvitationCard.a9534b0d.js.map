{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,W,iB,C,E,E,Q,C,E,Q,S,C,C,C,M,E,E,ECYC,E,EAE2C,E,E,E,O,c,C,E,O,C,a,C,M,C,E,a,C,C,G,E,E,O,C,U,I,G,I,E,E,E,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,S,C,C,C,C,C,C,C,C,C,C,C,E,S,E,C,E,G,A,K,I,G,A,Y,O,E,M,A,U,qB,O,C,C,I,I,E,E,E,I,C,E,A,W,E,M,A,W,E,M,Q,E,C,G,E,E,M,C,E,E,S,C,K,E,G,C,E,O,wB,C,E,E,I,E,C,C,E,E,C,E,E,E,M,C,E,G,E,I,C,I,E,C,E,I,I,K,E,C,C,E,C,A,W,E,C,E,C,C,E,C,I,I,K,E,M,C,E,M,C,E,C,E,M,C,E,A,C,E,c,C,S,C,E,G,E,M,A,U,0D,E,I,C,E,G,M,E,I,E,A,C,E,C,C,E,A,E,A,a,E,C,I,E,G,C,I,E,G,A,E,C,C,E,C,G,G,A,a,E,C,G,A,K,I,E,S,G,A,O,G,A,U,O,E,M,A,U,mB,C,E,E,E,G,C,G,C,E,G,C,C,E,C,E,E,E,G,C,G,C,E,G,C,C,E,C,E,E,E,I,C,G,E,O,C,E,K,C,E,E,E,I,A,U,E,E,O,C,G,C,C,E,C,E,C,G,O,c,C,E,E,I,C,G,E,C,C,E,E,S,C,C,C,C,C,E,I,I,E,U,M,C,E,E,E,E,E,M,C,I,E,E,C,C,E,C,I,C,E,G,C,C,E,C,I,C,G,O,E,E,K,C,E,E,S,C,C,C,C,C,C,C,E,G,A,M,G,C,E,M,A,U,iD,G,A,Y,O,E,I,G,C,E,C,E,G,C,G,M,A,U,4E,M,A,M,E,E,A,M,E,E,I,C,G,E,E,K,C,E,G,C,E,E,E,S,C,C,C,C,C,C,C,C,C,E,G,A,M,E,M,A,U,kC,G,A,M,G,C,E,M,A,U,iD,G,A,Y,O,E,I,G,C,E,C,E,G,C,G,M,A,U,2E,M,A,M,E,E,I,C,E,G,E,E,K,C,E,E,G,C,E,G,C,EAA5C,GAFC,EAAA,CAAA,AAAA,CAAA,EAAA,EAAA,SAAA,AAAA,EAAU,CAA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,C,E,O,wB,C,E,E,I,E,C,C,E,E,C,E,E,E,M,C,E,G,E,I,C,I,E,C,E,I,I,K,E,C,C,E,C,A,W,E,C,E,C,C,E,C,I,I,K,E,M,C,E,M,C,E,C,E,M,C,E,A,C,E,c,C,S,C,E,G,E,M,A,U,0D,E,I,C,E,G,M,E,I,E,A,C,E,C,C,E,A,E,A,a,E,C,I,E,G,C,I,E,G,A,E,C,C,E,C,G,G,A,a,E,C,G,A,K,I,E,S,G,A,O,G,A,U,O,E,M,A,U,mB,C,E,E,E,G,C,G,C,E,G,C,C,E,C,E,E,E,G,C,G,C,E,G,C,C,E,C,E,E,E,I,C,G,E,O,C,E,K,C,E,E,E,I,A,U,E,E,O,C,G,C,C,E,C,E,C,G,O,c,C,E,E,I,C,G,E,C,C,E,E,S,C,C,C,C,C,E,I,I,E,U,M,C,E,E,E,E,E,M,C,I,E,E,C,C,E,C,I,C,E,G,C,C,E,C,I,C,G,O,E,E,K,C,E,E,S,C,C,C,C,C,C,C,E,G,A,M,G,C,E,M,A,U,iD,G,A,Y,O,E,I,G,C,E,C,E,G,C,G,M,A,U,4E,M,A,M,E,E,A,M,E,E,I,C,G,E,E,K,C,E,G,C,E,E,E,S,C,C,C,C,C,C,C,C,C,E,G,A,M,E,M,A,U,kC,G,A,M,G,C,E,M,A,U,iD,G,A,Y,O,E,I,G,C,E,C,E,G,C,G,M,A,U,2E,M,A,M,E,E,I,C,E,G,E,E,K,C,E,E,G,C,E,G,C,EAAnB,IAAA,GALZ,EAAA,CAAA,AAAA,CAAA,EAAA,EAAA,SAAA,AAAA,EAAU,CACP,QAAS,cACT,KAAM,MACT,GACA,EAAA,QAAA,CADA,C,E,E,CAE+B,EAAA,Y,E,E,C,E,E,CAAR,EAAA,cAAQ,E,a,C,K,I,WAGnB,EAAA,GAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAY,IAMrB,OAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,C,W,C,E,a,C,E,S,C,EAAgB,MAAA,CAAA,EAAA,IAAA,CAAA,GAAA,KACZ,IAAI,CAAC,SAAS,CAAG,GAEjB,IAAM,EAAQ,YACN,IAAM,EAAE,IAAI,CAAC,SAAU,EAAI,cAAc,GACzC,KAEJ,CAAA,SAAE,CAAQ,CAAE,CAAG,IAAI,CAAC,iBAAoC,CAE5D,MAA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","sources":["<anon>","source/page/2019/InvitationCard.tsx","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/index.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/index.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/clone-node.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/clone-node.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/clone-pseudos.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/clone-pseudos.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/util.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/util.ts","node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/mimes.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/mimes.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/dataurl.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/dataurl.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/embed-images.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/embed-images.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/embed-resources.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/embed-resources.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/apply-style.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/apply-style.ts","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/es/embed-webfonts.js","node_modules/.pnpm/html-to-image@1.11.11/node_modules/html-to-image/src/embed-webfonts.ts","source/component/SessionBox.tsx","source/page/2019/InvitationCard.module.less","node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.13_/node_modules/@parcel/runtime-js/lib/runtime-517d0fbd8e61d85d.js","node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.13_/node_modules/@parcel/runtime-js/lib/runtime-43102cb03d9bfa00.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire2198\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"0yC7i\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $001ad9c74aa66c44$export$2e2bcd8739ae039);\n\nvar $b603G = parcelRequire(\"b603G\");\n\nvar $89MmN = parcelRequire(\"89MmN\");\n\nvar $a2E6i = parcelRequire(\"a2E6i\");\n\nvar $fonQc = parcelRequire(\"fonQc\");\n\nvar $iYhfJ = parcelRequire(\"iYhfJ\");\n\nvar $k3z6B = parcelRequire(\"k3z6B\");\n\nvar $ij4G1 = parcelRequire(\"ij4G1\");\n\nvar $f1rSJ = parcelRequire(\"f1rSJ\");\n\nvar $4tPGE = parcelRequire(\"4tPGE\");\n\nvar $687Jw = parcelRequire(\"687Jw\");\nvar $001ad9c74aa66c44$var$__esDecorate = undefined && undefined.__esDecorate || function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n};\nvar $001ad9c74aa66c44$var$__runInitializers = undefined && undefined.__runInitializers || function(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n};\nvar $001ad9c74aa66c44$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $001ad9c74aa66c44$var$__setFunctionName = undefined && undefined.__setFunctionName || function(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n};\nvar $001ad9c74aa66c44$var$__classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar $001ad9c74aa66c44$var$__classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nlet $001ad9c74aa66c44$var$InvitationCard = (()=>{\n    var _InvitationCard_imageURI_accessor_storage;\n    let _classDecorators = [\n        (0, $89MmN.component)({\n            tagName: \"invitation-card\"\n        }),\n        (0, $89MmN.observer)\n    ];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = HTMLElement;\n    let _imageURI_decorators;\n    let _imageURI_initializers = [];\n    let _imageURI_extraInitializers = [];\n    var InvitationCard = _classThis = class extends _classSuper {\n        constructor(){\n            super(...arguments);\n            _InvitationCard_imageURI_accessor_storage.set(this, $001ad9c74aa66c44$var$__runInitializers(this, _imageURI_initializers, \"\"));\n            Object.defineProperty(this, \"showImage\", {\n                enumerable: true,\n                configurable: true,\n                writable: true,\n                value: ($001ad9c74aa66c44$var$__runInitializers(this, _imageURI_extraInitializers), ()=>$001ad9c74aa66c44$var$__awaiter(this, void 0, void 0, function*() {\n                        if (this.imageURI) return;\n                        const box = this.querySelector(\"main\");\n                        if (box) this.imageURI = yield (0, $iYhfJ.toPng)(box);\n                    }))\n            });\n        }\n        get imageURI() {\n            return $001ad9c74aa66c44$var$__classPrivateFieldGet(this, _InvitationCard_imageURI_accessor_storage, \"f\");\n        }\n        set imageURI(value) {\n            $001ad9c74aa66c44$var$__classPrivateFieldSet(this, _InvitationCard_imageURI_accessor_storage, value, \"f\");\n        }\n        renderCard() {\n            const { username: username, gender: gender } = (0, $k3z6B.session).user;\n            return (0, $b603G.jsxs)(\"main\", {\n                className: `vw-100 vh-100 text-white d-flex flex-column ${$f1rSJ.box}`,\n                children: [\n                    (0, $b603G.jsx)((0, $fonQc.Image), {\n                        fluid: true,\n                        src: (0, (/*@__PURE__*/$parcel$interopDefault($4tPGE)))\n                    }),\n                    (0, $b603G.jsxs)(\"div\", {\n                        className: \"flex-grow-1 d-flex flex-column align-items-center justify-content-around text-center\",\n                        children: [\n                            (0, $b603G.jsxs)(\"header\", {\n                                children: [\n                                    (0, $b603G.jsx)(\"h3\", {\n                                        children: \"\\u8BDA\\u631A\\u9080\\u8BF7\"\n                                    }),\n                                    (0, $b603G.jsxs)(\"h2\", {\n                                        children: [\n                                            username[0],\n                                            gender === \"\\u5973\" ? \"\\u5973\\u58EB\" : \"\\u5148\\u751F\"\n                                        ]\n                                    }),\n                                    (0, $b603G.jsxs)(\"p\", {\n                                        className: \"lead mt-3\",\n                                        children: [\n                                            \"\\u4E8E 11 \\u6708 16 ~ 17 \\u65E5\",\n                                            (0, $b603G.jsx)(\"br\", {}),\n                                            \"\\u8385\\u4E34\",\n                                            (0, $b603G.jsx)(\"b\", {\n                                                children: \"\\u83C1\\u84C9\\u56FD\\u9645\\u5E7F\\u573A\"\n                                            }),\n                                            \"\\u53C2\\u4F1A\"\n                                        ]\n                                    })\n                                ]\n                            }),\n                            (0, $b603G.jsxs)(\"section\", {\n                                className: \"w-50 px-3 pt-3 bg-white\",\n                                children: [\n                                    (0, $b603G.jsx)((0, $fonQc.Image), {\n                                        fluid: true,\n                                        src: (0, (/*@__PURE__*/$parcel$interopDefault($687Jw)))\n                                    }),\n                                    (0, $b603G.jsx)(\"div\", {\n                                        className: \"lead text-dark\",\n                                        children: \"\\u548C\\u6211\\u4E00\\u8D77\\u53BB\"\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            });\n        }\n        render() {\n            const { imageURI: imageURI } = this;\n            return (0, $b603G.jsxs)((0, $ij4G1.SessionBox), {\n                className: \"position-relative\",\n                onClick: this.showImage,\n                children: [\n                    (0, $k3z6B.session).user && this.renderCard(),\n                    (0, $b603G.jsx)(\"img\", {\n                        className: `position-absolute vw-100 vh-100 ${$f1rSJ.cover}`,\n                        hidden: !imageURI,\n                        src: imageURI\n                    })\n                ]\n            });\n        }\n    };\n    _InvitationCard_imageURI_accessor_storage = new WeakMap();\n    $001ad9c74aa66c44$var$__setFunctionName(_classThis, \"InvitationCard\");\n    (()=>{\n        var _a;\n        const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;\n        _imageURI_decorators = [\n            (0, $a2E6i.observable)\n        ];\n        $001ad9c74aa66c44$var$__esDecorate(_classThis, null, _imageURI_decorators, {\n            kind: \"accessor\",\n            name: \"imageURI\",\n            static: false,\n            private: false,\n            access: {\n                has: (obj)=>\"imageURI\" in obj,\n                get: (obj)=>obj.imageURI,\n                set: (obj, value)=>{\n                    obj.imageURI = value;\n                }\n            },\n            metadata: _metadata\n        }, _imageURI_initializers, _imageURI_extraInitializers);\n        $001ad9c74aa66c44$var$__esDecorate(null, _classDescriptor = {\n            value: _classThis\n        }, _classDecorators, {\n            kind: \"class\",\n            name: _classThis.name,\n            metadata: _metadata\n        }, null, _classExtraInitializers);\n        InvitationCard = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _metadata\n        });\n        $001ad9c74aa66c44$var$__runInitializers(_classThis, _classExtraInitializers);\n    })();\n    return InvitationCard = _classThis;\n})();\nvar $001ad9c74aa66c44$export$2e2bcd8739ae039 = $001ad9c74aa66c44$var$InvitationCard;\n\n});\nparcelRegister(\"iYhfJ\", function(module, exports) {\n\n$parcel$export(module.exports, \"toPng\", () => $dcfb36a1d813879c$export$aba256f33615c92e);\n\nvar $fcbiq = parcelRequire(\"fcbiq\");\n\nvar $lk6FJ = parcelRequire(\"lk6FJ\");\n\nvar $6bqmm = parcelRequire(\"6bqmm\");\n\nvar $7AFXT = parcelRequire(\"7AFXT\");\n\nvar $68Esz = parcelRequire(\"68Esz\");\nasync function $dcfb36a1d813879c$export$20d300cb2d558b7(node, options = {}) {\n    const { width: width, height: height } = (0, $68Esz.getImageSize)(node, options);\n    const clonedNode = await (0, $fcbiq.cloneNode)(node, options, true);\n    await (0, $7AFXT.embedWebFonts)(clonedNode, options);\n    await (0, $lk6FJ.embedImages)(clonedNode, options);\n    (0, $6bqmm.applyStyle)(clonedNode, options);\n    const datauri = await (0, $68Esz.nodeToDataURL)(clonedNode, width, height);\n    return datauri;\n}\nasync function $dcfb36a1d813879c$export$f87f6982d1fd4f81(node, options = {}) {\n    const { width: width, height: height } = (0, $68Esz.getImageSize)(node, options);\n    const svg = await $dcfb36a1d813879c$export$20d300cb2d558b7(node, options);\n    const img = await (0, $68Esz.createImage)(svg);\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    const ratio = options.pixelRatio || (0, $68Esz.getPixelRatio)();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) (0, $68Esz.checkCanvasDimensions)(canvas);\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nasync function $dcfb36a1d813879c$export$6f9e32581c0cde11(node, options = {}) {\n    const { width: width, height: height } = (0, $68Esz.getImageSize)(node, options);\n    const canvas = await $dcfb36a1d813879c$export$f87f6982d1fd4f81(node, options);\n    const ctx = canvas.getContext(\"2d\");\n    return ctx.getImageData(0, 0, width, height).data;\n}\nasync function $dcfb36a1d813879c$export$aba256f33615c92e(node, options = {}) {\n    const canvas = await $dcfb36a1d813879c$export$f87f6982d1fd4f81(node, options);\n    return canvas.toDataURL();\n}\nasync function $dcfb36a1d813879c$export$ed218bd2440d33a5(node, options = {}) {\n    const canvas = await $dcfb36a1d813879c$export$f87f6982d1fd4f81(node, options);\n    return canvas.toDataURL(\"image/jpeg\", options.quality || 1);\n}\nasync function $dcfb36a1d813879c$export$b20f4ee19ffa0668(node, options = {}) {\n    const canvas = await $dcfb36a1d813879c$export$f87f6982d1fd4f81(node, options);\n    const blob = await (0, $68Esz.canvasToBlob)(canvas);\n    return blob;\n}\nasync function $dcfb36a1d813879c$export$92678bad7eef403b(node, options = {}) {\n    return (0, $7AFXT.getWebFontCSS)(node, options);\n}\n\n});\nparcelRegister(\"fcbiq\", function(module, exports) {\n\n$parcel$export(module.exports, \"cloneNode\", () => $b100bd344ebc86b8$export$ae8e35ea29ddac22);\n\nvar $cEnVM = parcelRequire(\"cEnVM\");\n\nvar $68Esz = parcelRequire(\"68Esz\");\n\nvar $h6N6c = parcelRequire(\"h6N6c\");\n\nvar $4rDqm = parcelRequire(\"4rDqm\");\nasync function $b100bd344ebc86b8$var$cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === \"data:,\") return canvas.cloneNode(false);\n    return (0, $68Esz.createImage)(dataURL);\n}\nasync function $b100bd344ebc86b8$var$cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 || ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return (0, $68Esz.createImage)(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = (0, $h6N6c.getMimeType)(poster);\n    const dataURL = await (0, $4rDqm.resourceToDataURL)(poster, contentType, options);\n    return (0, $68Esz.createImage)(dataURL);\n}\nasync function $b100bd344ebc86b8$var$cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) return await $b100bd344ebc86b8$export$ae8e35ea29ddac22(iframe.contentDocument.body, {}, true);\n    } catch (_b) {\n    // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function $b100bd344ebc86b8$var$cloneSingleNode(node, options) {\n    if ((0, $68Esz.isInstanceOfElement)(node, HTMLCanvasElement)) return $b100bd344ebc86b8$var$cloneCanvasElement(node);\n    if ((0, $68Esz.isInstanceOfElement)(node, HTMLVideoElement)) return $b100bd344ebc86b8$var$cloneVideoElement(node, options);\n    if ((0, $68Esz.isInstanceOfElement)(node, HTMLIFrameElement)) return $b100bd344ebc86b8$var$cloneIFrameElement(node);\n    return node.cloneNode(false);\n}\nconst $b100bd344ebc86b8$var$isSlotElement = (node)=>node.tagName != null && node.tagName.toUpperCase() === \"SLOT\";\nasync function $b100bd344ebc86b8$var$cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if ($b100bd344ebc86b8$var$isSlotElement(nativeNode) && nativeNode.assignedNodes) children = (0, $68Esz.toArray)(nativeNode.assignedNodes());\n    else if ((0, $68Esz.isInstanceOfElement)(nativeNode, HTMLIFrameElement) && ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) children = (0, $68Esz.toArray)(nativeNode.contentDocument.body.childNodes);\n    else children = (0, $68Esz.toArray)(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    if (children.length === 0 || (0, $68Esz.isInstanceOfElement)(nativeNode, HTMLVideoElement)) return clonedNode;\n    await children.reduce((deferred, child)=>deferred.then(()=>$b100bd344ebc86b8$export$ae8e35ea29ddac22(child, options)).then((clonedChild)=>{\n            if (clonedChild) clonedNode.appendChild(clonedChild);\n        }), Promise.resolve());\n    return clonedNode;\n}\nfunction $b100bd344ebc86b8$var$cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) return;\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    } else (0, $68Esz.toArray)(sourceStyle).forEach((name)=>{\n        let value = sourceStyle.getPropertyValue(name);\n        if (name === \"font-size\" && value.endsWith(\"px\")) {\n            const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n            value = `${reducedFont}px`;\n        }\n        if ((0, $68Esz.isInstanceOfElement)(nativeNode, HTMLIFrameElement) && name === \"display\" && value === \"inline\") value = \"block\";\n        if (name === \"d\" && clonedNode.getAttribute(\"d\")) value = `path(${clonedNode.getAttribute(\"d\")})`;\n        targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n    });\n}\nfunction $b100bd344ebc86b8$var$cloneInputValue(nativeNode, clonedNode) {\n    if ((0, $68Esz.isInstanceOfElement)(nativeNode, HTMLTextAreaElement)) clonedNode.innerHTML = nativeNode.value;\n    if ((0, $68Esz.isInstanceOfElement)(nativeNode, HTMLInputElement)) clonedNode.setAttribute(\"value\", nativeNode.value);\n}\nfunction $b100bd344ebc86b8$var$cloneSelectValue(nativeNode, clonedNode) {\n    if ((0, $68Esz.isInstanceOfElement)(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child)=>nativeNode.value === child.getAttribute(\"value\"));\n        if (selectedOption) selectedOption.setAttribute(\"selected\", \"\");\n    }\n}\nfunction $b100bd344ebc86b8$var$decorate(nativeNode, clonedNode) {\n    if ((0, $68Esz.isInstanceOfElement)(clonedNode, Element)) {\n        $b100bd344ebc86b8$var$cloneCSSStyle(nativeNode, clonedNode);\n        (0, $cEnVM.clonePseudoElements)(nativeNode, clonedNode);\n        $b100bd344ebc86b8$var$cloneInputValue(nativeNode, clonedNode);\n        $b100bd344ebc86b8$var$cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function $b100bd344ebc86b8$var$ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll(\"use\") : [];\n    if (uses.length === 0) return clone;\n    const processedDefs = {};\n    for(let i = 0; i < uses.length; i++){\n        const use = uses[i];\n        const id = use.getAttribute(\"xlink:href\");\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) // eslint-disable-next-line no-await-in-loop\n            processedDefs[id] = await $b100bd344ebc86b8$export$ae8e35ea29ddac22(definition, options, true);\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = \"http://www.w3.org/1999/xhtml\";\n        const svg = document.createElementNS(ns, \"svg\");\n        svg.setAttribute(\"xmlns\", ns);\n        svg.style.position = \"absolute\";\n        svg.style.width = \"0\";\n        svg.style.height = \"0\";\n        svg.style.overflow = \"hidden\";\n        svg.style.display = \"none\";\n        const defs = document.createElementNS(ns, \"defs\");\n        svg.appendChild(defs);\n        for(let i = 0; i < nodes.length; i++)defs.appendChild(nodes[i]);\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nasync function $b100bd344ebc86b8$export$ae8e35ea29ddac22(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) return null;\n    return Promise.resolve(node).then((clonedNode)=>$b100bd344ebc86b8$var$cloneSingleNode(clonedNode, options)).then((clonedNode)=>$b100bd344ebc86b8$var$cloneChildren(node, clonedNode, options)).then((clonedNode)=>$b100bd344ebc86b8$var$decorate(node, clonedNode)).then((clonedNode)=>$b100bd344ebc86b8$var$ensureSVGSymbols(clonedNode, options));\n}\n\n});\nparcelRegister(\"cEnVM\", function(module, exports) {\n\n$parcel$export(module.exports, \"clonePseudoElements\", () => $935bc8a89a8048db$export$8df63687a708ed2e);\n\nvar $68Esz = parcelRequire(\"68Esz\");\nfunction $935bc8a89a8048db$var$formatCSSText(style) {\n    const content = style.getPropertyValue(\"content\");\n    return `${style.cssText} content: '${content.replace(/'|\"/g, \"\")}';`;\n}\nfunction $935bc8a89a8048db$var$formatCSSProperties(style) {\n    return (0, $68Esz.toArray)(style).map((name)=>{\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? \" !important\" : \"\"};`;\n    }).join(\" \");\n}\nfunction $935bc8a89a8048db$var$getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText ? $935bc8a89a8048db$var$formatCSSText(style) : $935bc8a89a8048db$var$formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction $935bc8a89a8048db$var$clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue(\"content\");\n    if (content === \"\" || content === \"none\") return;\n    const className = (0, $68Esz.uuid)();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    } catch (err) {\n        return;\n    }\n    const styleElement = document.createElement(\"style\");\n    styleElement.appendChild($935bc8a89a8048db$var$getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nfunction $935bc8a89a8048db$export$8df63687a708ed2e(nativeNode, clonedNode) {\n    $935bc8a89a8048db$var$clonePseudoElement(nativeNode, clonedNode, \":before\");\n    $935bc8a89a8048db$var$clonePseudoElement(nativeNode, clonedNode, \":after\");\n}\n\n});\nparcelRegister(\"68Esz\", function(module, exports) {\n\n$parcel$export(module.exports, \"resolveUrl\", () => $4782dfe4508d9351$export$f85c16a6d62f7d63);\n$parcel$export(module.exports, \"uuid\", () => $4782dfe4508d9351$export$31b40729666a4ae0);\n$parcel$export(module.exports, \"toArray\", () => $4782dfe4508d9351$export$45b10814cc054894);\n$parcel$export(module.exports, \"getImageSize\", () => $4782dfe4508d9351$export$ada5537b2c061996);\n$parcel$export(module.exports, \"getPixelRatio\", () => $4782dfe4508d9351$export$d39ce20a37bba061);\n$parcel$export(module.exports, \"checkCanvasDimensions\", () => $4782dfe4508d9351$export$c2c809a2fe6b0f1a);\n$parcel$export(module.exports, \"canvasToBlob\", () => $4782dfe4508d9351$export$403d539f215df596);\n$parcel$export(module.exports, \"createImage\", () => $4782dfe4508d9351$export$ec664d7487540b);\n$parcel$export(module.exports, \"nodeToDataURL\", () => $4782dfe4508d9351$export$b62810fb8ca515fa);\n$parcel$export(module.exports, \"isInstanceOfElement\", () => $4782dfe4508d9351$export$3a92fc9ec83ef360);\n\nvar $4Jj9n = parcelRequire(\"4Jj9n\");\nfunction $4782dfe4508d9351$export$f85c16a6d62f7d63(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) return url;\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) return window.location.protocol + url;\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) return url;\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement(\"base\");\n    const a = doc.createElement(\"a\");\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) base.href = baseUrl;\n    a.href = url;\n    return a.href;\n}\nconst $4782dfe4508d9351$export$31b40729666a4ae0 = (()=>{\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = ()=>// eslint-disable-next-line no-bitwise\n        `0000${(Math.random() * 36 ** 4 << 0).toString(36)}`.slice(-4);\n    return ()=>{\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nfunction $4782dfe4508d9351$export$1391212d75b2ee65(ms) {\n    return (args)=>new Promise((resolve)=>{\n            setTimeout(()=>resolve(args), ms);\n        });\n}\nfunction $4782dfe4508d9351$export$45b10814cc054894(arrayLike) {\n    const arr = [];\n    for(let i = 0, l = arrayLike.length; i < l; i++)arr.push(arrayLike[i]);\n    return arr;\n}\nfunction $4782dfe4508d9351$var$px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace(\"px\", \"\")) : 0;\n}\nfunction $4782dfe4508d9351$var$getNodeWidth(node) {\n    const leftBorder = $4782dfe4508d9351$var$px(node, \"border-left-width\");\n    const rightBorder = $4782dfe4508d9351$var$px(node, \"border-right-width\");\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction $4782dfe4508d9351$var$getNodeHeight(node) {\n    const topBorder = $4782dfe4508d9351$var$px(node, \"border-top-width\");\n    const bottomBorder = $4782dfe4508d9351$var$px(node, \"border-bottom-width\");\n    return node.clientHeight + topBorder + bottomBorder;\n}\nfunction $4782dfe4508d9351$export$ada5537b2c061996(targetNode, options = {}) {\n    const width = options.width || $4782dfe4508d9351$var$getNodeWidth(targetNode);\n    const height = options.height || $4782dfe4508d9351$var$getNodeHeight(targetNode);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction $4782dfe4508d9351$export$d39ce20a37bba061() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = $4Jj9n;\n    } catch (e) {\n    // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env ? FINAL_PROCESS.env.devicePixelRatio : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) ratio = 1;\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst $4782dfe4508d9351$var$canvasDimensionLimit = 16384;\nfunction $4782dfe4508d9351$export$c2c809a2fe6b0f1a(canvas) {\n    if (canvas.width > $4782dfe4508d9351$var$canvasDimensionLimit || canvas.height > $4782dfe4508d9351$var$canvasDimensionLimit) {\n        if (canvas.width > $4782dfe4508d9351$var$canvasDimensionLimit && canvas.height > $4782dfe4508d9351$var$canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= $4782dfe4508d9351$var$canvasDimensionLimit / canvas.width;\n                canvas.width = $4782dfe4508d9351$var$canvasDimensionLimit;\n            } else {\n                canvas.width *= $4782dfe4508d9351$var$canvasDimensionLimit / canvas.height;\n                canvas.height = $4782dfe4508d9351$var$canvasDimensionLimit;\n            }\n        } else if (canvas.width > $4782dfe4508d9351$var$canvasDimensionLimit) {\n            canvas.height *= $4782dfe4508d9351$var$canvasDimensionLimit / canvas.width;\n            canvas.width = $4782dfe4508d9351$var$canvasDimensionLimit;\n        } else {\n            canvas.width *= $4782dfe4508d9351$var$canvasDimensionLimit / canvas.height;\n            canvas.height = $4782dfe4508d9351$var$canvasDimensionLimit;\n        }\n    }\n}\nfunction $4782dfe4508d9351$export$403d539f215df596(canvas, options = {}) {\n    if (canvas.toBlob) return new Promise((resolve)=>{\n        canvas.toBlob(resolve, options.type ? options.type : \"image/png\", options.quality ? options.quality : 1);\n    });\n    return new Promise((resolve)=>{\n        const binaryString = window.atob(canvas.toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined).split(\",\")[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for(let i = 0; i < len; i += 1)binaryArray[i] = binaryString.charCodeAt(i);\n        resolve(new Blob([\n            binaryArray\n        ], {\n            type: options.type ? options.type : \"image/png\"\n        }));\n    });\n}\nfunction $4782dfe4508d9351$export$ec664d7487540b(url) {\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        img.decode = ()=>resolve(img);\n        img.onload = ()=>resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = \"anonymous\";\n        img.decoding = \"async\";\n        img.src = url;\n    });\n}\nasync function $4782dfe4508d9351$export$fe77aa9c02de4599(svg) {\n    return Promise.resolve().then(()=>new XMLSerializer().serializeToString(svg)).then(encodeURIComponent).then((html)=>`data:image/svg+xml;charset=utf-8,${html}`);\n}\nasync function $4782dfe4508d9351$export$b62810fb8ca515fa(node, width, height) {\n    const xmlns = \"http://www.w3.org/2000/svg\";\n    const svg = document.createElementNS(xmlns, \"svg\");\n    const foreignObject = document.createElementNS(xmlns, \"foreignObject\");\n    svg.setAttribute(\"width\", `${width}`);\n    svg.setAttribute(\"height\", `${height}`);\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n    foreignObject.setAttribute(\"width\", \"100%\");\n    foreignObject.setAttribute(\"height\", \"100%\");\n    foreignObject.setAttribute(\"x\", \"0\");\n    foreignObject.setAttribute(\"y\", \"0\");\n    foreignObject.setAttribute(\"externalResourcesRequired\", \"true\");\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return $4782dfe4508d9351$export$fe77aa9c02de4599(svg);\n}\nconst $4782dfe4508d9351$export$3a92fc9ec83ef360 = (node, instance)=>{\n    if (node instanceof instance) return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null) return false;\n    return nodePrototype.constructor.name === instance.name || $4782dfe4508d9351$export$3a92fc9ec83ef360(nodePrototype, instance);\n};\n\n});\nparcelRegister(\"4Jj9n\", function(module, exports) {\n// shim for using process in browser\nvar $371a3837fd81d701$var$process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $371a3837fd81d701$var$cachedSetTimeout;\nvar $371a3837fd81d701$var$cachedClearTimeout;\nfunction $371a3837fd81d701$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $371a3837fd81d701$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $371a3837fd81d701$var$cachedSetTimeout = setTimeout;\n        else $371a3837fd81d701$var$cachedSetTimeout = $371a3837fd81d701$var$defaultSetTimout;\n    } catch (e) {\n        $371a3837fd81d701$var$cachedSetTimeout = $371a3837fd81d701$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $371a3837fd81d701$var$cachedClearTimeout = clearTimeout;\n        else $371a3837fd81d701$var$cachedClearTimeout = $371a3837fd81d701$var$defaultClearTimeout;\n    } catch (e) {\n        $371a3837fd81d701$var$cachedClearTimeout = $371a3837fd81d701$var$defaultClearTimeout;\n    }\n})();\nfunction $371a3837fd81d701$var$runTimeout(fun) {\n    if ($371a3837fd81d701$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($371a3837fd81d701$var$cachedSetTimeout === $371a3837fd81d701$var$defaultSetTimout || !$371a3837fd81d701$var$cachedSetTimeout) && setTimeout) {\n        $371a3837fd81d701$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $371a3837fd81d701$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $371a3837fd81d701$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $371a3837fd81d701$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $371a3837fd81d701$var$runClearTimeout(marker) {\n    if ($371a3837fd81d701$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($371a3837fd81d701$var$cachedClearTimeout === $371a3837fd81d701$var$defaultClearTimeout || !$371a3837fd81d701$var$cachedClearTimeout) && clearTimeout) {\n        $371a3837fd81d701$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $371a3837fd81d701$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $371a3837fd81d701$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $371a3837fd81d701$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $371a3837fd81d701$var$queue = [];\nvar $371a3837fd81d701$var$draining = false;\nvar $371a3837fd81d701$var$currentQueue;\nvar $371a3837fd81d701$var$queueIndex = -1;\nfunction $371a3837fd81d701$var$cleanUpNextTick() {\n    if (!$371a3837fd81d701$var$draining || !$371a3837fd81d701$var$currentQueue) return;\n    $371a3837fd81d701$var$draining = false;\n    if ($371a3837fd81d701$var$currentQueue.length) $371a3837fd81d701$var$queue = $371a3837fd81d701$var$currentQueue.concat($371a3837fd81d701$var$queue);\n    else $371a3837fd81d701$var$queueIndex = -1;\n    if ($371a3837fd81d701$var$queue.length) $371a3837fd81d701$var$drainQueue();\n}\nfunction $371a3837fd81d701$var$drainQueue() {\n    if ($371a3837fd81d701$var$draining) return;\n    var timeout = $371a3837fd81d701$var$runTimeout($371a3837fd81d701$var$cleanUpNextTick);\n    $371a3837fd81d701$var$draining = true;\n    var len = $371a3837fd81d701$var$queue.length;\n    while(len){\n        $371a3837fd81d701$var$currentQueue = $371a3837fd81d701$var$queue;\n        $371a3837fd81d701$var$queue = [];\n        while(++$371a3837fd81d701$var$queueIndex < len)if ($371a3837fd81d701$var$currentQueue) $371a3837fd81d701$var$currentQueue[$371a3837fd81d701$var$queueIndex].run();\n        $371a3837fd81d701$var$queueIndex = -1;\n        len = $371a3837fd81d701$var$queue.length;\n    }\n    $371a3837fd81d701$var$currentQueue = null;\n    $371a3837fd81d701$var$draining = false;\n    $371a3837fd81d701$var$runClearTimeout(timeout);\n}\n$371a3837fd81d701$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $371a3837fd81d701$var$queue.push(new $371a3837fd81d701$var$Item(fun, args));\n    if ($371a3837fd81d701$var$queue.length === 1 && !$371a3837fd81d701$var$draining) $371a3837fd81d701$var$runTimeout($371a3837fd81d701$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $371a3837fd81d701$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$371a3837fd81d701$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$371a3837fd81d701$var$process.title = \"browser\";\n$371a3837fd81d701$var$process.browser = true;\n$371a3837fd81d701$var$process.env = {};\n$371a3837fd81d701$var$process.argv = [];\n$371a3837fd81d701$var$process.version = \"\"; // empty string to avoid regexp issues\n$371a3837fd81d701$var$process.versions = {};\nfunction $371a3837fd81d701$var$noop() {}\n$371a3837fd81d701$var$process.on = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.addListener = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.once = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.off = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.removeListener = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.removeAllListeners = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.emit = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.prependListener = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.prependOnceListener = $371a3837fd81d701$var$noop;\n$371a3837fd81d701$var$process.listeners = function(name) {\n    return [];\n};\n$371a3837fd81d701$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$371a3837fd81d701$var$process.cwd = function() {\n    return \"/\";\n};\n$371a3837fd81d701$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$371a3837fd81d701$var$process.umask = function() {\n    return 0;\n};\n\n});\n\n\n\nparcelRegister(\"h6N6c\", function(module, exports) {\n\n$parcel$export(module.exports, \"getMimeType\", () => $c749153f13d96f99$export$200548c990602f61);\nconst $c749153f13d96f99$var$WOFF = \"application/font-woff\";\nconst $c749153f13d96f99$var$JPEG = \"image/jpeg\";\nconst $c749153f13d96f99$var$mimes = {\n    woff: $c749153f13d96f99$var$WOFF,\n    woff2: $c749153f13d96f99$var$WOFF,\n    ttf: \"application/font-truetype\",\n    eot: \"application/vnd.ms-fontobject\",\n    png: \"image/png\",\n    jpg: $c749153f13d96f99$var$JPEG,\n    jpeg: $c749153f13d96f99$var$JPEG,\n    gif: \"image/gif\",\n    tiff: \"image/tiff\",\n    svg: \"image/svg+xml\",\n    webp: \"image/webp\"\n};\nfunction $c749153f13d96f99$var$getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : \"\";\n}\nfunction $c749153f13d96f99$export$200548c990602f61(url) {\n    const extension = $c749153f13d96f99$var$getExtension(url).toLowerCase();\n    return $c749153f13d96f99$var$mimes[extension] || \"\";\n}\n\n});\n\nparcelRegister(\"4rDqm\", function(module, exports) {\n\n$parcel$export(module.exports, \"isDataUrl\", () => $33c843df93354230$export$f8a05efa20ffd5a);\n$parcel$export(module.exports, \"makeDataUrl\", () => $33c843df93354230$export$68336ea1617fa80a);\n$parcel$export(module.exports, \"fetchAsDataURL\", () => $33c843df93354230$export$c20a8b76c95b0d41);\n$parcel$export(module.exports, \"resourceToDataURL\", () => $33c843df93354230$export$bdf0422c029b202a);\nfunction $33c843df93354230$var$getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nfunction $33c843df93354230$export$f8a05efa20ffd5a(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nfunction $33c843df93354230$export$68336ea1617fa80a(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nasync function $33c843df93354230$export$c20a8b76c95b0d41(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) throw new Error(`Resource \"${res.url}\" not found`);\n    const blob = await res.blob();\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = ()=>{\n            try {\n                resolve(process({\n                    res: res,\n                    result: reader.result\n                }));\n            } catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst $33c843df93354230$var$cache = {};\nfunction $33c843df93354230$var$getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, \"\");\n    if (includeQueryParams) key = url;\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) key = key.replace(/.*\\//, \"\");\n    return contentType ? `[${contentType}]${key}` : key;\n}\nasync function $33c843df93354230$export$bdf0422c029b202a(resourceUrl, contentType, options) {\n    const cacheKey = $33c843df93354230$var$getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if ($33c843df93354230$var$cache[cacheKey] != null) return $33c843df93354230$var$cache[cacheKey];\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? \"&\" : \"?\") + new Date().getTime();\n    let dataURL;\n    try {\n        const content = await $33c843df93354230$export$c20a8b76c95b0d41(resourceUrl, options.fetchRequestInit, ({ res: res, result: result })=>{\n            if (!contentType) // eslint-disable-next-line no-param-reassign\n            contentType = res.headers.get(\"Content-Type\") || \"\";\n            return $33c843df93354230$var$getContentFromDataUrl(result);\n        });\n        dataURL = $33c843df93354230$export$68336ea1617fa80a(content, contentType);\n    } catch (error) {\n        dataURL = options.imagePlaceholder || \"\";\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) msg = typeof error === \"string\" ? error : error.message;\n        if (msg) console.warn(msg);\n    }\n    $33c843df93354230$var$cache[cacheKey] = dataURL;\n    return dataURL;\n}\n\n});\n\n\nparcelRegister(\"lk6FJ\", function(module, exports) {\n\n$parcel$export(module.exports, \"embedImages\", () => $f860a42c288ac7a8$export$6660fa8dd20e53aa);\n\nvar $2t7gQ = parcelRequire(\"2t7gQ\");\n\nvar $68Esz = parcelRequire(\"68Esz\");\n\nvar $4rDqm = parcelRequire(\"4rDqm\");\n\nvar $h6N6c = parcelRequire(\"h6N6c\");\nasync function $f860a42c288ac7a8$var$embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await (0, $2t7gQ.embedResources)(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function $f860a42c288ac7a8$var$embedBackground(clonedNode, options) {\n    if (!await $f860a42c288ac7a8$var$embedProp(\"background\", clonedNode, options)) await $f860a42c288ac7a8$var$embedProp(\"background-image\", clonedNode, options);\n    if (!await $f860a42c288ac7a8$var$embedProp(\"mask\", clonedNode, options)) await $f860a42c288ac7a8$var$embedProp(\"mask-image\", clonedNode, options);\n}\nasync function $f860a42c288ac7a8$var$embedImageNode(clonedNode, options) {\n    const isImageElement = (0, $68Esz.isInstanceOfElement)(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !(0, $4rDqm.isDataUrl)(clonedNode.src)) && !((0, $68Esz.isInstanceOfElement)(clonedNode, SVGImageElement) && !(0, $4rDqm.isDataUrl)(clonedNode.href.baseVal))) return;\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await (0, $4rDqm.resourceToDataURL)(url, (0, $h6N6c.getMimeType)(url), options);\n    await new Promise((resolve, reject)=>{\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) image.decode = resolve;\n        if (image.loading === \"lazy\") image.loading = \"eager\";\n        if (isImageElement) {\n            clonedNode.srcset = \"\";\n            clonedNode.src = dataURL;\n        } else clonedNode.href.baseVal = dataURL;\n    });\n}\nasync function $f860a42c288ac7a8$var$embedChildren(clonedNode, options) {\n    const children = (0, $68Esz.toArray)(clonedNode.childNodes);\n    const deferreds = children.map((child)=>$f860a42c288ac7a8$export$6660fa8dd20e53aa(child, options));\n    await Promise.all(deferreds).then(()=>clonedNode);\n}\nasync function $f860a42c288ac7a8$export$6660fa8dd20e53aa(clonedNode, options) {\n    if ((0, $68Esz.isInstanceOfElement)(clonedNode, Element)) {\n        await $f860a42c288ac7a8$var$embedBackground(clonedNode, options);\n        await $f860a42c288ac7a8$var$embedImageNode(clonedNode, options);\n        await $f860a42c288ac7a8$var$embedChildren(clonedNode, options);\n    }\n}\n\n});\nparcelRegister(\"2t7gQ\", function(module, exports) {\n\n$parcel$export(module.exports, \"shouldEmbed\", () => $1cc3ee04d2481668$export$7b668369e5eab853);\n$parcel$export(module.exports, \"embedResources\", () => $1cc3ee04d2481668$export$3d88803585cbbc21);\n\nvar $68Esz = parcelRequire(\"68Esz\");\n\nvar $h6N6c = parcelRequire(\"h6N6c\");\n\nvar $4rDqm = parcelRequire(\"4rDqm\");\nconst $1cc3ee04d2481668$var$URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst $1cc3ee04d2481668$var$URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst $1cc3ee04d2481668$var$FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction $1cc3ee04d2481668$var$toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, \"g\");\n}\nfunction $1cc3ee04d2481668$export$d04549d631b8762d(cssText) {\n    const urls = [];\n    cssText.replace($1cc3ee04d2481668$var$URL_REGEX, (raw, quotation, url)=>{\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url)=>!(0, $4rDqm.isDataUrl)(url));\n}\nasync function $1cc3ee04d2481668$export$2be46bb7e96db87f(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? (0, $68Esz.resolveUrl)(resourceURL, baseURL) : resourceURL;\n        const contentType = (0, $h6N6c.getMimeType)(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = (0, $4rDqm.makeDataUrl)(content, contentType);\n        } else dataURL = await (0, $4rDqm.resourceToDataURL)(resolvedURL, contentType, options);\n        return cssText.replace($1cc3ee04d2481668$var$toRegex(resourceURL), `$1${dataURL}$3`);\n    } catch (error) {\n    // pass\n    }\n    return cssText;\n}\nfunction $1cc3ee04d2481668$var$filterPreferredFontFormat(str, { preferredFontFormat: preferredFontFormat }) {\n    return !preferredFontFormat ? str : str.replace($1cc3ee04d2481668$var$FONT_SRC_REGEX, (match)=>{\n        // eslint-disable-next-line no-constant-condition\n        while(true){\n            const [src, , format] = $1cc3ee04d2481668$var$URL_WITH_FORMAT_REGEX.exec(match) || [];\n            if (!format) return \"\";\n            if (format === preferredFontFormat) return `src: ${src};`;\n        }\n    });\n}\nfunction $1cc3ee04d2481668$export$7b668369e5eab853(url) {\n    return url.search($1cc3ee04d2481668$var$URL_REGEX) !== -1;\n}\nasync function $1cc3ee04d2481668$export$3d88803585cbbc21(cssText, baseUrl, options) {\n    if (!$1cc3ee04d2481668$export$7b668369e5eab853(cssText)) return cssText;\n    const filteredCSSText = $1cc3ee04d2481668$var$filterPreferredFontFormat(cssText, options);\n    const urls = $1cc3ee04d2481668$export$d04549d631b8762d(filteredCSSText);\n    return urls.reduce((deferred, url)=>deferred.then((css)=>$1cc3ee04d2481668$export$2be46bb7e96db87f(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n\n});\n\n\nparcelRegister(\"6bqmm\", function(module, exports) {\n\n$parcel$export(module.exports, \"applyStyle\", () => $4808379cf1566c37$export$d63a6b7859608045);\nfunction $4808379cf1566c37$export$d63a6b7859608045(node, options) {\n    const { style: style } = node;\n    if (options.backgroundColor) style.backgroundColor = options.backgroundColor;\n    if (options.width) style.width = `${options.width}px`;\n    if (options.height) style.height = `${options.height}px`;\n    const manual = options.style;\n    if (manual != null) Object.keys(manual).forEach((key)=>{\n        style[key] = manual[key];\n    });\n    return node;\n}\n\n});\n\nparcelRegister(\"7AFXT\", function(module, exports) {\n\n$parcel$export(module.exports, \"getWebFontCSS\", () => $586c729879695f49$export$253c9aa3d83a57b6);\n$parcel$export(module.exports, \"embedWebFonts\", () => $586c729879695f49$export$2c2c83b77c8cb421);\n\nvar $68Esz = parcelRequire(\"68Esz\");\n\nvar $4rDqm = parcelRequire(\"4rDqm\");\n\nvar $2t7gQ = parcelRequire(\"2t7gQ\");\nconst $586c729879695f49$var$cssFetchCache = {};\nasync function $586c729879695f49$var$fetchCSS(url) {\n    let cache = $586c729879695f49$var$cssFetchCache[url];\n    if (cache != null) return cache;\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = {\n        url: url,\n        cssText: cssText\n    };\n    $586c729879695f49$var$cssFetchCache[url] = cache;\n    return cache;\n}\nasync function $586c729879695f49$var$embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc)=>{\n        let url = loc.replace(regexUrl, \"$1\");\n        if (!url.startsWith(\"https://\")) url = new URL(url, data.url).href;\n        return (0, $4rDqm.fetchAsDataURL)(url, options.fetchRequestInit, ({ result: result })=>{\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [\n                loc,\n                result\n            ];\n        });\n    });\n    return Promise.all(loadFonts).then(()=>cssText);\n}\nfunction $586c729879695f49$var$parseCSS(source) {\n    if (source == null) return [];\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, \"\");\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp(\"((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})\", \"gi\");\n    // eslint-disable-next-line no-constant-condition\n    while(true){\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) break;\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, \"\");\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = \"((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})\";\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, \"gi\");\n    // eslint-disable-next-line no-constant-condition\n    while(true){\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) break;\n            else importRegex.lastIndex = unifiedRegex.lastIndex;\n        } else unifiedRegex.lastIndex = importRegex.lastIndex;\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function $586c729879695f49$var$getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet)=>{\n        if (\"cssRules\" in sheet) try {\n            (0, $68Esz.toArray)(sheet.cssRules || []).forEach((item, index)=>{\n                if (item.type === CSSRule.IMPORT_RULE) {\n                    let importIndex = index + 1;\n                    const url = item.href;\n                    const deferred = $586c729879695f49$var$fetchCSS(url).then((metadata)=>$586c729879695f49$var$embedFonts(metadata, options)).then((cssText)=>$586c729879695f49$var$parseCSS(cssText).forEach((rule)=>{\n                            try {\n                                sheet.insertRule(rule, rule.startsWith(\"@import\") ? importIndex += 1 : sheet.cssRules.length);\n                            } catch (error) {\n                                console.error(\"Error inserting rule from remote css\", {\n                                    rule: rule,\n                                    error: error\n                                });\n                            }\n                        })).catch((e)=>{\n                        console.error(\"Error loading remote css\", e.toString());\n                    });\n                    deferreds.push(deferred);\n                }\n            });\n        } catch (e) {\n            const inline = styleSheets.find((a)=>a.href == null) || document.styleSheets[0];\n            if (sheet.href != null) deferreds.push($586c729879695f49$var$fetchCSS(sheet.href).then((metadata)=>$586c729879695f49$var$embedFonts(metadata, options)).then((cssText)=>$586c729879695f49$var$parseCSS(cssText).forEach((rule)=>{\n                    inline.insertRule(rule, sheet.cssRules.length);\n                })).catch((err)=>{\n                console.error(\"Error loading remote stylesheet\", err);\n            }));\n            console.error(\"Error inlining remote css file\", e);\n        }\n    });\n    return Promise.all(deferreds).then(()=>{\n        // Second loop parses rules\n        styleSheets.forEach((sheet)=>{\n            if (\"cssRules\" in sheet) try {\n                (0, $68Esz.toArray)(sheet.cssRules || []).forEach((item)=>{\n                    ret.push(item);\n                });\n            } catch (e) {\n                console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n            }\n        });\n        return ret;\n    });\n}\nfunction $586c729879695f49$var$getWebFontRules(cssRules) {\n    return cssRules.filter((rule)=>rule.type === CSSRule.FONT_FACE_RULE).filter((rule)=>(0, $2t7gQ.shouldEmbed)(rule.style.getPropertyValue(\"src\")));\n}\nasync function $586c729879695f49$var$parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) throw new Error(\"Provided element is not within a Document\");\n    const styleSheets = (0, $68Esz.toArray)(node.ownerDocument.styleSheets);\n    const cssRules = await $586c729879695f49$var$getCSSRules(styleSheets, options);\n    return $586c729879695f49$var$getWebFontRules(cssRules);\n}\nasync function $586c729879695f49$export$253c9aa3d83a57b6(node, options) {\n    const rules = await $586c729879695f49$var$parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule)=>{\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return (0, $2t7gQ.embedResources)(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join(\"\\n\");\n}\nasync function $586c729879695f49$export$2c2c83b77c8cb421(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null ? options.fontEmbedCSS : options.skipFonts ? null : await $586c729879695f49$export$253c9aa3d83a57b6(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement(\"style\");\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        else clonedNode.appendChild(styleNode);\n    }\n}\n\n});\n\n\nparcelRegister(\"ij4G1\", function(module, exports) {\n\n$parcel$export(module.exports, \"SessionBox\", () => $d53da11331b77c2b$export$a476b4f7d4df5522);\n\nvar $b603G = parcelRequire(\"b603G\");\n\nvar $89MmN = parcelRequire(\"89MmN\");\n\nvar $a2E6i = parcelRequire(\"a2E6i\");\n\nvar $fonQc = parcelRequire(\"fonQc\");\n\nvar $k3z6B = parcelRequire(\"k3z6B\");\nvar $d53da11331b77c2b$var$__esDecorate = undefined && undefined.__esDecorate || function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n};\nvar $d53da11331b77c2b$var$__runInitializers = undefined && undefined.__runInitializers || function(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n};\nvar $d53da11331b77c2b$var$__setFunctionName = undefined && undefined.__setFunctionName || function(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n};\nvar $d53da11331b77c2b$var$__classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar $d53da11331b77c2b$var$__classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nlet $d53da11331b77c2b$export$a476b4f7d4df5522 = (()=>{\n    var _SessionBox_countDown_accessor_storage;\n    let _classDecorators = [\n        (0, $89MmN.component)({\n            tagName: \"session-box\",\n            mode: \"open\"\n        }),\n        (0, $89MmN.observer)\n    ];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = HTMLElement;\n    let _countDown_decorators;\n    let _countDown_initializers = [];\n    let _countDown_extraInitializers = [];\n    var SessionBox = _classThis = class extends _classSuper {\n        constructor(){\n            super(...arguments);\n            _SessionBox_countDown_accessor_storage.set(this, $d53da11331b77c2b$var$__runInitializers(this, _countDown_initializers, 0));\n            Object.defineProperty(this, \"handleSMSCode\", {\n                enumerable: true,\n                configurable: true,\n                writable: true,\n                value: ($d53da11331b77c2b$var$__runInitializers(this, _countDown_extraInitializers), ()=>{\n                    this.countDown = 60;\n                    const timer = setInterval(()=>--this.countDown || clearInterval(timer), 1000), { elements: elements } = this.firstElementChild;\n                    return (0, $k3z6B.session).sendSMSCode(elements.namedItem(\"phone\").value);\n                })\n            });\n            Object.defineProperty(this, \"handleSignIn\", {\n                enumerable: true,\n                configurable: true,\n                writable: true,\n                value: (event)=>{\n                    event.preventDefault();\n                    const form = new FormData(event.target);\n                    return (0, $k3z6B.session).signIn(form.get(\"phone\"), form.get(\"code\"));\n                }\n            });\n        }\n        get countDown() {\n            return $d53da11331b77c2b$var$__classPrivateFieldGet(this, _SessionBox_countDown_accessor_storage, \"f\");\n        }\n        set countDown(value) {\n            $d53da11331b77c2b$var$__classPrivateFieldSet(this, _SessionBox_countDown_accessor_storage, value, \"f\");\n        }\n        connectedCallback() {\n            (0, $k3z6B.session).getProfile();\n        }\n        renderForm() {\n            const { countDown: countDown } = this;\n            return (0, $b603G.jsxs)(\"form\", {\n                className: \"m-3 p-3 border rounded\",\n                onSubmit: this.handleSignIn,\n                children: [\n                    (0, $b603G.jsx)(\"h2\", {\n                        className: \"text-center mb-3\",\n                        children: \"\\u53C2\\u4F1A\\u8005\\u767B\\u5F55\"\n                    }),\n                    (0, $b603G.jsx)((0, $fonQc.InputGroup), {\n                        size: \"lg\",\n                        className: \"mb-3\",\n                        children: (0, $b603G.jsx)((0, $fonQc.FormControl), {\n                            type: \"tel\",\n                            name: \"phone\",\n                            maxLength: 11,\n                            required: true,\n                            placeholder: \"\\u624B\\u673A\\u53F7\"\n                        })\n                    }),\n                    (0, $b603G.jsxs)((0, $fonQc.InputGroup), {\n                        size: \"lg\",\n                        className: \"mb-3\",\n                        children: [\n                            (0, $b603G.jsx)((0, $fonQc.FormControl), {\n                                name: \"code\",\n                                required: true,\n                                placeholder: \"\\u77ED\\u4FE1\\u9A8C\\u8BC1\\u7801\",\n                                autocomplete: \"off\"\n                            }),\n                            (0, $b603G.jsx)((0, $fonQc.Button), {\n                                variant: \"outline-secondary\",\n                                onClick: this.handleSMSCode,\n                                disabled: !!countDown,\n                                children: countDown ? countDown + \"s\" : \"\\u83B7\\u53D6\"\n                            })\n                        ]\n                    }),\n                    (0, $b603G.jsx)((0, $fonQc.Button), {\n                        type: \"submit\",\n                        variant: \"primary\",\n                        className: \"d-block w-100\",\n                        size: \"lg\",\n                        children: \"\\u767B\\u5F55\"\n                    })\n                ]\n            });\n        }\n        render() {\n            return (0, $b603G.jsxs)((0, $b603G.Fragment), {\n                children: [\n                    (0, $b603G.jsx)(\"link\", {\n                        rel: \"stylesheet\",\n                        href: \"https://unpkg.com/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n                    }),\n                    (0, $k3z6B.session).user ? (0, $b603G.jsx)(\"slot\", {}) : this.renderForm()\n                ]\n            });\n        }\n    };\n    _SessionBox_countDown_accessor_storage = new WeakMap();\n    $d53da11331b77c2b$var$__setFunctionName(_classThis, \"SessionBox\");\n    (()=>{\n        var _a;\n        const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;\n        _countDown_decorators = [\n            (0, $89MmN.attribute),\n            (0, $a2E6i.observable)\n        ];\n        $d53da11331b77c2b$var$__esDecorate(_classThis, null, _countDown_decorators, {\n            kind: \"accessor\",\n            name: \"countDown\",\n            static: false,\n            private: false,\n            access: {\n                has: (obj)=>\"countDown\" in obj,\n                get: (obj)=>obj.countDown,\n                set: (obj, value)=>{\n                    obj.countDown = value;\n                }\n            },\n            metadata: _metadata\n        }, _countDown_initializers, _countDown_extraInitializers);\n        $d53da11331b77c2b$var$__esDecorate(null, _classDescriptor = {\n            value: _classThis\n        }, _classDecorators, {\n            kind: \"class\",\n            name: _classThis.name,\n            metadata: _metadata\n        }, null, _classExtraInitializers);\n        SessionBox = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _metadata\n        });\n        $d53da11331b77c2b$var$__runInitializers(_classThis, _classExtraInitializers);\n    })();\n    return SessionBox = _classThis;\n})();\n\n});\n\nparcelRegister(\"f1rSJ\", function(module, exports) {\n\n$parcel$export(module.exports, \"box\", () => $aefc93beca39863e$export$827f4ee28efc37, (v) => $aefc93beca39863e$export$827f4ee28efc37 = v);\n$parcel$export(module.exports, \"cover\", () => $aefc93beca39863e$export$4bdbf921f0c0fd8c, (v) => $aefc93beca39863e$export$4bdbf921f0c0fd8c = v);\nvar $aefc93beca39863e$export$827f4ee28efc37;\nvar $aefc93beca39863e$export$4bdbf921f0c0fd8c;\n$aefc93beca39863e$export$827f4ee28efc37 = `CqZazW_box`;\n$aefc93beca39863e$export$4bdbf921f0c0fd8c = `CqZazW_cover`;\n\n});\n\nparcelRegister(\"4tPGE\", function(module, exports) {\nmodule.exports = new URL(\"banner.c8e98b18.jpg\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"687Jw\", function(module, exports) {\nmodule.exports = new URL(\"BuyCode.5f20ce22.png\", import.meta.url).toString();\n\n});\n\n\n\n//# sourceMappingURL=InvitationCard.a9534b0d.js.map\n","import { component, observer } from 'web-cell';\nimport { observable } from 'mobx';\nimport { Image } from 'boot-cell';\nimport { toPng } from 'html-to-image';\n\nimport { session } from '../../model';\nimport { SessionBox } from '../../component/SessionBox';\n\nimport * as style from './InvitationCard.module.less';\nimport banner from './data/banner.jpg';\nimport BuyCode from './data/BuyCode.png';\n\n@component({ tagName: 'invitation-card' })\n@observer\nexport default class InvitationCard extends HTMLElement {\n    @observable\n    accessor imageURI = '';\n\n    showImage = async () => {\n        if (this.imageURI) return;\n\n        const box = this.querySelector<HTMLElement>('main');\n\n        if (box) this.imageURI = await toPng(box);\n    };\n\n    renderCard() {\n        const { username, gender } = session.user!;\n\n        return (\n            <main\n                className={`vw-100 vh-100 text-white d-flex flex-column ${style.box}`}\n            >\n                <Image fluid src={banner} />\n\n                <div className=\"flex-grow-1 d-flex flex-column align-items-center justify-content-around text-center\">\n                    <header>\n                        <h3>诚挚邀请</h3>\n                        <h2>\n                            {username[0]}\n                            {gender === '女' ? '女士' : '先生'}\n                        </h2>\n                        <p className=\"lead mt-3\">\n                            于 11 月 16 ~ 17 日<br />\n                            莅临<b>菁蓉国际广场</b>参会\n                        </p>\n                    </header>\n\n                    <section className=\"w-50 px-3 pt-3 bg-white\">\n                        <Image fluid src={BuyCode} />\n                        <div className=\"lead text-dark\">和我一起去</div>\n                    </section>\n                </div>\n            </main>\n        );\n    }\n\n    render() {\n        const { imageURI } = this;\n\n        return (\n            <SessionBox className=\"position-relative\" onClick={this.showImage}>\n                {session.user && this.renderCard()}\n                <img\n                    className={`position-absolute vw-100 vh-100 ${style.cover}`}\n                    hidden={!imageURI}\n                    src={imageURI}\n                />\n            </SessionBox>\n        );\n    }\n}\n","import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","import { Options } from './types'\nimport { cloneNode } from './clone-node'\nimport { embedImages } from './embed-images'\nimport { applyStyle } from './apply-style'\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts'\nimport {\n  getImageSize,\n  getPixelRatio,\n  createImage,\n  canvasToBlob,\n  nodeToDataURL,\n  checkCanvasDimensions,\n} from './util'\n\nexport async function toSvg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const { width, height } = getImageSize(node, options)\n  const clonedNode = (await cloneNode(node, options, true)) as HTMLElement\n  await embedWebFonts(clonedNode, options)\n  await embedImages(clonedNode, options)\n  applyStyle(clonedNode, options)\n  const datauri = await nodeToDataURL(clonedNode, width, height)\n  return datauri\n}\n\nexport async function toCanvas<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<HTMLCanvasElement> {\n  const { width, height } = getImageSize(node, options)\n  const svg = await toSvg(node, options)\n  const img = await createImage(svg)\n\n  const canvas = document.createElement('canvas')\n  const context = canvas.getContext('2d')!\n  const ratio = options.pixelRatio || getPixelRatio()\n  const canvasWidth = options.canvasWidth || width\n  const canvasHeight = options.canvasHeight || height\n\n  canvas.width = canvasWidth * ratio\n  canvas.height = canvasHeight * ratio\n\n  if (!options.skipAutoScale) {\n    checkCanvasDimensions(canvas)\n  }\n  canvas.style.width = `${canvasWidth}`\n  canvas.style.height = `${canvasHeight}`\n\n  if (options.backgroundColor) {\n    context.fillStyle = options.backgroundColor\n    context.fillRect(0, 0, canvas.width, canvas.height)\n  }\n\n  context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n  return canvas\n}\n\nexport async function toPixelData<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Uint8ClampedArray> {\n  const { width, height } = getImageSize(node, options)\n  const canvas = await toCanvas(node, options)\n  const ctx = canvas.getContext('2d')!\n  return ctx.getImageData(0, 0, width, height).data\n}\n\nexport async function toPng<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL()\n}\n\nexport async function toJpeg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL('image/jpeg', options.quality || 1)\n}\n\nexport async function toBlob<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Blob | null> {\n  const canvas = await toCanvas(node, options)\n  const blob = await canvasToBlob(canvas)\n  return blob\n}\n\nexport async function getFontEmbedCSS<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  return getWebFontCSS(node, options)\n}\n","import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n//# sourceMappingURL=clone-node.js.map","import type { Options } from './types'\nimport { clonePseudoElements } from './clone-pseudos'\nimport { createImage, toArray, isInstanceOfElement } from './util'\nimport { getMimeType } from './mimes'\nimport { resourceToDataURL } from './dataurl'\n\nasync function cloneCanvasElement(canvas: HTMLCanvasElement) {\n  const dataURL = canvas.toDataURL()\n  if (dataURL === 'data:,') {\n    return canvas.cloneNode(false) as HTMLCanvasElement\n  }\n  return createImage(dataURL)\n}\n\nasync function cloneVideoElement(video: HTMLVideoElement, options: Options) {\n  if (video.currentSrc) {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    canvas.width = video.clientWidth\n    canvas.height = video.clientHeight\n    ctx?.drawImage(video, 0, 0, canvas.width, canvas.height)\n    const dataURL = canvas.toDataURL()\n    return createImage(dataURL)\n  }\n\n  const poster = video.poster\n  const contentType = getMimeType(poster)\n  const dataURL = await resourceToDataURL(poster, contentType, options)\n  return createImage(dataURL)\n}\n\nasync function cloneIFrameElement(iframe: HTMLIFrameElement) {\n  try {\n    if (iframe?.contentDocument?.body) {\n      return (await cloneNode(\n        iframe.contentDocument.body,\n        {},\n        true,\n      )) as HTMLBodyElement\n    }\n  } catch {\n    // Failed to clone iframe\n  }\n\n  return iframe.cloneNode(false) as HTMLIFrameElement\n}\n\nasync function cloneSingleNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<HTMLElement> {\n  if (isInstanceOfElement(node, HTMLCanvasElement)) {\n    return cloneCanvasElement(node)\n  }\n\n  if (isInstanceOfElement(node, HTMLVideoElement)) {\n    return cloneVideoElement(node, options)\n  }\n\n  if (isInstanceOfElement(node, HTMLIFrameElement)) {\n    return cloneIFrameElement(node)\n  }\n\n  return node.cloneNode(false) as T\n}\n\nconst isSlotElement = (node: HTMLElement): node is HTMLSlotElement =>\n  node.tagName != null && node.tagName.toUpperCase() === 'SLOT'\n\nasync function cloneChildren<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  options: Options,\n): Promise<T> {\n  let children: T[] = []\n\n  if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n    children = toArray<T>(nativeNode.assignedNodes())\n  } else if (\n    isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n    nativeNode.contentDocument?.body\n  ) {\n    children = toArray<T>(nativeNode.contentDocument.body.childNodes)\n  } else {\n    children = toArray<T>((nativeNode.shadowRoot ?? nativeNode).childNodes)\n  }\n\n  if (\n    children.length === 0 ||\n    isInstanceOfElement(nativeNode, HTMLVideoElement)\n  ) {\n    return clonedNode\n  }\n\n  await children.reduce(\n    (deferred, child) =>\n      deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild: HTMLElement | null) => {\n          if (clonedChild) {\n            clonedNode.appendChild(clonedChild)\n          }\n        }),\n    Promise.resolve(),\n  )\n\n  return clonedNode\n}\n\nfunction cloneCSSStyle<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  const targetStyle = clonedNode.style\n  if (!targetStyle) {\n    return\n  }\n\n  const sourceStyle = window.getComputedStyle(nativeNode)\n  if (sourceStyle.cssText) {\n    targetStyle.cssText = sourceStyle.cssText\n    targetStyle.transformOrigin = sourceStyle.transformOrigin\n  } else {\n    toArray<string>(sourceStyle).forEach((name) => {\n      let value = sourceStyle.getPropertyValue(name)\n      if (name === 'font-size' && value.endsWith('px')) {\n        const reducedFont =\n          Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1\n        value = `${reducedFont}px`\n      }\n\n      if (\n        isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        name === 'display' &&\n        value === 'inline'\n      ) {\n        value = 'block'\n      }\n      \n      if (name === 'd' && clonedNode.getAttribute('d')) {\n        value = `path(${clonedNode.getAttribute('d')})`\n      }\n      \n      targetStyle.setProperty(\n        name,\n        value,\n        sourceStyle.getPropertyPriority(name),\n      )\n    })\n  }\n}\n\nfunction cloneInputValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n    clonedNode.innerHTML = nativeNode.value\n  }\n\n  if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n    clonedNode.setAttribute('value', nativeNode.value)\n  }\n}\n\nfunction cloneSelectValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n    const clonedSelect = clonedNode as any as HTMLSelectElement\n    const selectedOption = Array.from(clonedSelect.children).find(\n      (child) => nativeNode.value === child.getAttribute('value'),\n    )\n\n    if (selectedOption) {\n      selectedOption.setAttribute('selected', '')\n    }\n  }\n}\n\nfunction decorate<T extends HTMLElement>(nativeNode: T, clonedNode: T): T {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    cloneCSSStyle(nativeNode, clonedNode)\n    clonePseudoElements(nativeNode, clonedNode)\n    cloneInputValue(nativeNode, clonedNode)\n    cloneSelectValue(nativeNode, clonedNode)\n  }\n\n  return clonedNode\n}\n\nasync function ensureSVGSymbols<T extends HTMLElement>(\n  clone: T,\n  options: Options,\n) {\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : []\n  if (uses.length === 0) {\n    return clone\n  }\n\n  const processedDefs: { [key: string]: HTMLElement } = {}\n  for (let i = 0; i < uses.length; i++) {\n    const use = uses[i]\n    const id = use.getAttribute('xlink:href')\n    if (id) {\n      const exist = clone.querySelector(id)\n      const definition = document.querySelector(id) as HTMLElement\n      if (!exist && definition && !processedDefs[id]) {\n        // eslint-disable-next-line no-await-in-loop\n        processedDefs[id] = (await cloneNode(definition, options, true))!\n      }\n    }\n  }\n\n  const nodes = Object.values(processedDefs)\n  if (nodes.length) {\n    const ns = 'http://www.w3.org/1999/xhtml'\n    const svg = document.createElementNS(ns, 'svg')\n    svg.setAttribute('xmlns', ns)\n    svg.style.position = 'absolute'\n    svg.style.width = '0'\n    svg.style.height = '0'\n    svg.style.overflow = 'hidden'\n    svg.style.display = 'none'\n\n    const defs = document.createElementNS(ns, 'defs')\n    svg.appendChild(defs)\n\n    for (let i = 0; i < nodes.length; i++) {\n      defs.appendChild(nodes[i])\n    }\n\n    clone.appendChild(svg)\n  }\n\n  return clone\n}\n\nexport async function cloneNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n  isRoot?: boolean,\n): Promise<T | null> {\n  if (!isRoot && options.filter && !options.filter(node)) {\n    return null\n  }\n\n  return Promise.resolve(node)\n    .then((clonedNode) => cloneSingleNode(clonedNode, options) as Promise<T>)\n    .then((clonedNode) => cloneChildren(node, clonedNode, options))\n    .then((clonedNode) => decorate(node, clonedNode))\n    .then((clonedNode) => ensureSVGSymbols(clonedNode, options))\n}\n","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clone-pseudos.js.map","import { uuid, toArray } from './util'\n\ntype Pseudo = ':before' | ':after'\n\nfunction formatCSSText(style: CSSStyleDeclaration) {\n  const content = style.getPropertyValue('content')\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`\n}\n\nfunction formatCSSProperties(style: CSSStyleDeclaration) {\n  return toArray<string>(style)\n    .map((name) => {\n      const value = style.getPropertyValue(name)\n      const priority = style.getPropertyPriority(name)\n\n      return `${name}: ${value}${priority ? ' !important' : ''};`\n    })\n    .join(' ')\n}\n\nfunction getPseudoElementStyle(\n  className: string,\n  pseudo: Pseudo,\n  style: CSSStyleDeclaration,\n): Text {\n  const selector = `.${className}:${pseudo}`\n  const cssText = style.cssText\n    ? formatCSSText(style)\n    : formatCSSProperties(style)\n\n  return document.createTextNode(`${selector}{${cssText}}`)\n}\n\nfunction clonePseudoElement<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  pseudo: Pseudo,\n) {\n  const style = window.getComputedStyle(nativeNode, pseudo)\n  const content = style.getPropertyValue('content')\n  if (content === '' || content === 'none') {\n    return\n  }\n\n  const className = uuid()\n  try {\n    clonedNode.className = `${clonedNode.className} ${className}`\n  } catch (err) {\n    return\n  }\n\n  const styleElement = document.createElement('style')\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style))\n  clonedNode.appendChild(styleElement)\n}\n\nexport function clonePseudoElements<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n) {\n  clonePseudoElement(nativeNode, clonedNode, ':before')\n  clonePseudoElement(nativeNode, clonedNode, ':after')\n}\n","export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.decode = () => resolve(img);\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'async';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\nexport const isInstanceOfElement = (node, instance) => {\n    if (node instanceof instance)\n        return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null)\n        return false;\n    return (nodePrototype.constructor.name === instance.name ||\n        isInstanceOfElement(nodePrototype, instance));\n};\n//# sourceMappingURL=util.js.map","import type { Options } from './types'\n\nexport function resolveUrl(url: string, baseUrl: string | null): string {\n  // url is absolute already\n  if (url.match(/^[a-z]+:\\/\\//i)) {\n    return url\n  }\n\n  // url is absolute already, without protocol\n  if (url.match(/^\\/\\//)) {\n    return window.location.protocol + url\n  }\n\n  // dataURI, mailto:, tel:, etc.\n  if (url.match(/^[a-z]+:/i)) {\n    return url\n  }\n\n  const doc = document.implementation.createHTMLDocument()\n  const base = doc.createElement('base')\n  const a = doc.createElement('a')\n\n  doc.head.appendChild(base)\n  doc.body.appendChild(a)\n\n  if (baseUrl) {\n    base.href = baseUrl\n  }\n\n  a.href = url\n\n  return a.href\n}\n\nexport const uuid = (() => {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0\n\n  // ref: http://stackoverflow.com/a/6248722/2519373\n  const random = () =>\n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4)\n\n  return () => {\n    counter += 1\n    return `u${random()}${counter}`\n  }\n})()\n\nexport function delay<T>(ms: number) {\n  return (args: T) =>\n    new Promise<T>((resolve) => {\n      setTimeout(() => resolve(args), ms)\n    })\n}\n\nexport function toArray<T>(arrayLike: any): T[] {\n  const arr: T[] = []\n\n  for (let i = 0, l = arrayLike.length; i < l; i++) {\n    arr.push(arrayLike[i])\n  }\n\n  return arr\n}\n\nfunction px(node: HTMLElement, styleProperty: string) {\n  const win = node.ownerDocument.defaultView || window\n  const val = win.getComputedStyle(node).getPropertyValue(styleProperty)\n  return val ? parseFloat(val.replace('px', '')) : 0\n}\n\nfunction getNodeWidth(node: HTMLElement) {\n  const leftBorder = px(node, 'border-left-width')\n  const rightBorder = px(node, 'border-right-width')\n  return node.clientWidth + leftBorder + rightBorder\n}\n\nfunction getNodeHeight(node: HTMLElement) {\n  const topBorder = px(node, 'border-top-width')\n  const bottomBorder = px(node, 'border-bottom-width')\n  return node.clientHeight + topBorder + bottomBorder\n}\n\nexport function getImageSize(targetNode: HTMLElement, options: Options = {}) {\n  const width = options.width || getNodeWidth(targetNode)\n  const height = options.height || getNodeHeight(targetNode)\n\n  return { width, height }\n}\n\nexport function getPixelRatio() {\n  let ratio\n\n  let FINAL_PROCESS\n  try {\n    FINAL_PROCESS = process\n  } catch (e) {\n    // pass\n  }\n\n  const val =\n    FINAL_PROCESS && FINAL_PROCESS.env\n      ? FINAL_PROCESS.env.devicePixelRatio\n      : null\n  if (val) {\n    ratio = parseInt(val, 10)\n    if (Number.isNaN(ratio)) {\n      ratio = 1\n    }\n  }\n  return ratio || window.devicePixelRatio || 1\n}\n\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384\n\nexport function checkCanvasDimensions(canvas: HTMLCanvasElement) {\n  if (\n    canvas.width > canvasDimensionLimit ||\n    canvas.height > canvasDimensionLimit\n  ) {\n    if (\n      canvas.width > canvasDimensionLimit &&\n      canvas.height > canvasDimensionLimit\n    ) {\n      if (canvas.width > canvas.height) {\n        canvas.height *= canvasDimensionLimit / canvas.width\n        canvas.width = canvasDimensionLimit\n      } else {\n        canvas.width *= canvasDimensionLimit / canvas.height\n        canvas.height = canvasDimensionLimit\n      }\n    } else if (canvas.width > canvasDimensionLimit) {\n      canvas.height *= canvasDimensionLimit / canvas.width\n      canvas.width = canvasDimensionLimit\n    } else {\n      canvas.width *= canvasDimensionLimit / canvas.height\n      canvas.height = canvasDimensionLimit\n    }\n  }\n}\n\nexport function canvasToBlob(\n  canvas: HTMLCanvasElement,\n  options: Options = {},\n): Promise<Blob | null> {\n  if (canvas.toBlob) {\n    return new Promise((resolve) => {\n      canvas.toBlob(\n        resolve,\n        options.type ? options.type : 'image/png',\n        options.quality ? options.quality : 1,\n      )\n    })\n  }\n\n  return new Promise((resolve) => {\n    const binaryString = window.atob(\n      canvas\n        .toDataURL(\n          options.type ? options.type : undefined,\n          options.quality ? options.quality : undefined,\n        )\n        .split(',')[1],\n    )\n    const len = binaryString.length\n    const binaryArray = new Uint8Array(len)\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i)\n    }\n\n    resolve(\n      new Blob([binaryArray], {\n        type: options.type ? options.type : 'image/png',\n      }),\n    )\n  })\n}\n\nexport function createImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image()\n    img.decode = () => resolve(img) as any\n    img.onload = () => resolve(img)\n    img.onerror = reject\n    img.crossOrigin = 'anonymous'\n    img.decoding = 'async'\n    img.src = url\n  })\n}\n\nexport async function svgToDataURL(svg: SVGElement): Promise<string> {\n  return Promise.resolve()\n    .then(() => new XMLSerializer().serializeToString(svg))\n    .then(encodeURIComponent)\n    .then((html) => `data:image/svg+xml;charset=utf-8,${html}`)\n}\n\nexport async function nodeToDataURL(\n  node: HTMLElement,\n  width: number,\n  height: number,\n): Promise<string> {\n  const xmlns = 'http://www.w3.org/2000/svg'\n  const svg = document.createElementNS(xmlns, 'svg')\n  const foreignObject = document.createElementNS(xmlns, 'foreignObject')\n\n  svg.setAttribute('width', `${width}`)\n  svg.setAttribute('height', `${height}`)\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n\n  foreignObject.setAttribute('width', '100%')\n  foreignObject.setAttribute('height', '100%')\n  foreignObject.setAttribute('x', '0')\n  foreignObject.setAttribute('y', '0')\n  foreignObject.setAttribute('externalResourcesRequired', 'true')\n\n  svg.appendChild(foreignObject)\n  foreignObject.appendChild(node)\n  return svgToDataURL(svg)\n}\n\nexport const isInstanceOfElement = <\n  T extends typeof Element | typeof HTMLElement | typeof SVGImageElement,\n>(\n  node: Element | HTMLElement | SVGImageElement,\n  instance: T,\n): node is T['prototype'] => {\n  if (node instanceof instance) return true\n\n  const nodePrototype = Object.getPrototypeOf(node)\n\n  if (nodePrototype === null) return false\n\n  return (\n    nodePrototype.constructor.name === instance.name ||\n    isInstanceOfElement(nodePrototype, instance)\n  )\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n    webp: 'image/webp',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n//# sourceMappingURL=mimes.js.map","const WOFF = 'application/font-woff'\nconst JPEG = 'image/jpeg'\nconst mimes: { [key: string]: string } = {\n  woff: WOFF,\n  woff2: WOFF,\n  ttf: 'application/font-truetype',\n  eot: 'application/vnd.ms-fontobject',\n  png: 'image/png',\n  jpg: JPEG,\n  jpeg: JPEG,\n  gif: 'image/gif',\n  tiff: 'image/tiff',\n  svg: 'image/svg+xml',\n  webp: 'image/webp',\n}\n\nfunction getExtension(url: string): string {\n  const match = /\\.([^./]*?)$/g.exec(url)\n  return match ? match[1] : ''\n}\n\nexport function getMimeType(url: string): string {\n  const extension = getExtension(url).toLowerCase()\n  return mimes[extension] || ''\n}\n","function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n//# sourceMappingURL=dataurl.js.map","import { Options } from './types'\n\nfunction getContentFromDataUrl(dataURL: string) {\n  return dataURL.split(/,/)[1]\n}\n\nexport function isDataUrl(url: string) {\n  return url.search(/^(data:)/) !== -1\n}\n\nexport function makeDataUrl(content: string, mimeType: string) {\n  return `data:${mimeType};base64,${content}`\n}\n\nexport async function fetchAsDataURL<T>(\n  url: string,\n  init: RequestInit | undefined,\n  process: (data: { result: string; res: Response }) => T,\n): Promise<T> {\n  const res = await fetch(url, init)\n  if (res.status === 404) {\n    throw new Error(`Resource \"${res.url}\" not found`)\n  }\n  const blob = await res.blob()\n  return new Promise<T>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onerror = reject\n    reader.onloadend = () => {\n      try {\n        resolve(process({ res, result: reader.result as string }))\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    reader.readAsDataURL(blob)\n  })\n}\n\nconst cache: { [url: string]: string } = {}\n\nfunction getCacheKey(\n  url: string,\n  contentType: string | undefined,\n  includeQueryParams: boolean | undefined,\n) {\n  let key = url.replace(/\\?.*/, '')\n\n  if (includeQueryParams) {\n    key = url\n  }\n\n  // font resource\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '')\n  }\n\n  return contentType ? `[${contentType}]${key}` : key\n}\n\nexport async function resourceToDataURL(\n  resourceUrl: string,\n  contentType: string | undefined,\n  options: Options,\n) {\n  const cacheKey = getCacheKey(\n    resourceUrl,\n    contentType,\n    options.includeQueryParams,\n  )\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey]\n  }\n\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime()\n  }\n\n  let dataURL: string\n  try {\n    const content = await fetchAsDataURL(\n      resourceUrl,\n      options.fetchRequestInit,\n      ({ res, result }) => {\n        if (!contentType) {\n          // eslint-disable-next-line no-param-reassign\n          contentType = res.headers.get('Content-Type') || ''\n        }\n        return getContentFromDataUrl(result)\n      },\n    )\n    dataURL = makeDataUrl(content, contentType!)\n  } catch (error) {\n    dataURL = options.imagePlaceholder || ''\n\n    let msg = `Failed to fetch resource: ${resourceUrl}`\n    if (error) {\n      msg = typeof error === 'string' ? error : error.message\n    }\n\n    if (msg) {\n      console.warn(msg)\n    }\n  }\n\n  cache[cacheKey] = dataURL\n  return dataURL\n}\n","import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map","import { Options } from './types'\nimport { embedResources } from './embed-resources'\nimport { toArray, isInstanceOfElement } from './util'\nimport { isDataUrl, resourceToDataURL } from './dataurl'\nimport { getMimeType } from './mimes'\n\nasync function embedProp(\n  propName: string,\n  node: HTMLElement,\n  options: Options,\n) {\n  const propValue = node.style?.getPropertyValue(propName)\n  if (propValue) {\n    const cssString = await embedResources(propValue, null, options)\n    node.style.setProperty(\n      propName,\n      cssString,\n      node.style.getPropertyPriority(propName),\n    )\n    return true\n  }\n  return false\n}\n\nasync function embedBackground<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (!(await embedProp('background', clonedNode, options))) {\n    await embedProp('background-image', clonedNode, options)\n  }\n  if (!(await embedProp('mask', clonedNode, options))) {\n    await embedProp('mask-image', clonedNode, options)\n  }\n}\n\nasync function embedImageNode<T extends HTMLElement | SVGImageElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement)\n\n  if (\n    !(isImageElement && !isDataUrl(clonedNode.src)) &&\n    !(\n      isInstanceOfElement(clonedNode, SVGImageElement) &&\n      !isDataUrl(clonedNode.href.baseVal)\n    )\n  ) {\n    return\n  }\n\n  const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal\n\n  const dataURL = await resourceToDataURL(url, getMimeType(url), options)\n  await new Promise((resolve, reject) => {\n    clonedNode.onload = resolve\n    clonedNode.onerror = reject\n\n    const image = clonedNode as HTMLImageElement\n    if (image.decode) {\n      image.decode = resolve as any\n    }\n\n    if (image.loading === 'lazy') {\n      image.loading = 'eager'\n    }\n\n    if (isImageElement) {\n      clonedNode.srcset = ''\n      clonedNode.src = dataURL\n    } else {\n      clonedNode.href.baseVal = dataURL\n    }\n  })\n}\n\nasync function embedChildren<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const children = toArray<HTMLElement>(clonedNode.childNodes)\n  const deferreds = children.map((child) => embedImages(child, options))\n  await Promise.all(deferreds).then(() => clonedNode)\n}\n\nexport async function embedImages<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    await embedBackground(clonedNode, options)\n    await embedImageNode(clonedNode, options)\n    await embedChildren(clonedNode, options)\n  }\n}\n","import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embed-resources.js.map","import { Options } from './types'\nimport { resolveUrl } from './util'\nimport { getMimeType } from './mimes'\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl'\n\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g\n\nfunction toRegex(url: string): RegExp {\n  // eslint-disable-next-line no-useless-escape\n  const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n  return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g')\n}\n\nexport function parseURLs(cssText: string): string[] {\n  const urls: string[] = []\n\n  cssText.replace(URL_REGEX, (raw, quotation, url) => {\n    urls.push(url)\n    return raw\n  })\n\n  return urls.filter((url) => !isDataUrl(url))\n}\n\nexport async function embed(\n  cssText: string,\n  resourceURL: string,\n  baseURL: string | null,\n  options: Options,\n  getContentFromUrl?: (url: string) => Promise<string>,\n): Promise<string> {\n  try {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL\n    const contentType = getMimeType(resourceURL)\n    let dataURL: string\n    if (getContentFromUrl) {\n      const content = await getContentFromUrl(resolvedURL)\n      dataURL = makeDataUrl(content, contentType)\n    } else {\n      dataURL = await resourceToDataURL(resolvedURL, contentType, options)\n    }\n    return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`)\n  } catch (error) {\n    // pass\n  }\n  return cssText\n}\n\nfunction filterPreferredFontFormat(\n  str: string,\n  { preferredFontFormat }: Options,\n): string {\n  return !preferredFontFormat\n    ? str\n    : str.replace(FONT_SRC_REGEX, (match: string) => {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || []\n          if (!format) {\n            return ''\n          }\n\n          if (format === preferredFontFormat) {\n            return `src: ${src};`\n          }\n        }\n      })\n}\n\nexport function shouldEmbed(url: string): boolean {\n  return url.search(URL_REGEX) !== -1\n}\n\nexport async function embedResources(\n  cssText: string,\n  baseUrl: string | null,\n  options: Options,\n): Promise<string> {\n  if (!shouldEmbed(cssText)) {\n    return cssText\n  }\n\n  const filteredCSSText = filterPreferredFontFormat(cssText, options)\n  const urls = parseURLs(filteredCSSText)\n  return urls.reduce(\n    (deferred, url) =>\n      deferred.then((css) => embed(css, url, baseUrl, options)),\n    Promise.resolve(filteredCSSText),\n  )\n}\n","export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=apply-style.js.map","import { Options } from './types'\n\nexport function applyStyle<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): T {\n  const { style } = node\n\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor\n  }\n\n  if (options.width) {\n    style.width = `${options.width}px`\n  }\n\n  if (options.height) {\n    style.height = `${options.height}px`\n  }\n\n  const manual = options.style\n  if (manual != null) {\n    Object.keys(manual).forEach((key: any) => {\n      style[key] = manual[key] as string\n    })\n  }\n\n  return node\n}\n","import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err);\n                    }));\n                }\n                console.error('Error inlining remote css file', e);\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n//# sourceMappingURL=embed-webfonts.js.map","import type { Options } from './types'\nimport { toArray } from './util'\nimport { fetchAsDataURL } from './dataurl'\nimport { shouldEmbed, embedResources } from './embed-resources'\n\ninterface Metadata {\n  url: string\n  cssText: string\n}\n\nconst cssFetchCache: { [href: string]: Metadata } = {}\n\nasync function fetchCSS(url: string) {\n  let cache = cssFetchCache[url]\n  if (cache != null) {\n    return cache\n  }\n\n  const res = await fetch(url)\n  const cssText = await res.text()\n  cache = { url, cssText }\n\n  cssFetchCache[url] = cache\n\n  return cache\n}\n\nasync function embedFonts(data: Metadata, options: Options): Promise<string> {\n  let cssText = data.cssText\n  const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g\n  const fontLocs = cssText.match(/url\\([^)]+\\)/g) || []\n  const loadFonts = fontLocs.map(async (loc: string) => {\n    let url = loc.replace(regexUrl, '$1')\n    if (!url.startsWith('https://')) {\n      url = new URL(url, data.url).href\n    }\n\n    return fetchAsDataURL<[string, string]>(\n      url,\n      options.fetchRequestInit,\n      ({ result }) => {\n        cssText = cssText.replace(loc, `url(${result})`)\n        return [loc, result]\n      },\n    )\n  })\n\n  return Promise.all(loadFonts).then(() => cssText)\n}\n\nfunction parseCSS(source: string) {\n  if (source == null) {\n    return []\n  }\n\n  const result: string[] = []\n  const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi\n  // strip out comments\n  let cssText = source.replace(commentsRegex, '')\n\n  // eslint-disable-next-line prefer-regex-literals\n  const keyframesRegex = new RegExp(\n    '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})',\n    'gi',\n  )\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const matches = keyframesRegex.exec(cssText)\n    if (matches === null) {\n      break\n    }\n    result.push(matches[0])\n  }\n  cssText = cssText.replace(keyframesRegex, '')\n\n  const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi\n  // to match css & media queries together\n  const combinedCSSRegex =\n    '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n    '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'\n  // unified regex\n  const unifiedRegex = new RegExp(combinedCSSRegex, 'gi')\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let matches = importRegex.exec(cssText)\n    if (matches === null) {\n      matches = unifiedRegex.exec(cssText)\n      if (matches === null) {\n        break\n      } else {\n        importRegex.lastIndex = unifiedRegex.lastIndex\n      }\n    } else {\n      unifiedRegex.lastIndex = importRegex.lastIndex\n    }\n    result.push(matches[0])\n  }\n\n  return result\n}\n\nasync function getCSSRules(\n  styleSheets: CSSStyleSheet[],\n  options: Options,\n): Promise<CSSStyleRule[]> {\n  const ret: CSSStyleRule[] = []\n  const deferreds: Promise<number | void>[] = []\n\n  // First loop inlines imports\n  styleSheets.forEach((sheet) => {\n    if ('cssRules' in sheet) {\n      try {\n        toArray<CSSRule>(sheet.cssRules || []).forEach((item, index) => {\n          if (item.type === CSSRule.IMPORT_RULE) {\n            let importIndex = index + 1\n            const url = (item as CSSImportRule).href\n            const deferred = fetchCSS(url)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  try {\n                    sheet.insertRule(\n                      rule,\n                      rule.startsWith('@import')\n                        ? (importIndex += 1)\n                        : sheet.cssRules.length,\n                    )\n                  } catch (error) {\n                    console.error('Error inserting rule from remote css', {\n                      rule,\n                      error,\n                    })\n                  }\n                }),\n              )\n              .catch((e) => {\n                console.error('Error loading remote css', e.toString())\n              })\n\n            deferreds.push(deferred)\n          }\n        })\n      } catch (e) {\n        const inline =\n          styleSheets.find((a) => a.href == null) || document.styleSheets[0]\n        if (sheet.href != null) {\n          deferreds.push(\n            fetchCSS(sheet.href)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  inline.insertRule(rule, sheet.cssRules.length)\n                }),\n              )\n              .catch((err: unknown) => {\n                console.error('Error loading remote stylesheet', err)\n              }),\n          )\n        }\n        console.error('Error inlining remote css file', e)\n      }\n    }\n  })\n\n  return Promise.all(deferreds).then(() => {\n    // Second loop parses rules\n    styleSheets.forEach((sheet) => {\n      if ('cssRules' in sheet) {\n        try {\n          toArray<CSSStyleRule>(sheet.cssRules || []).forEach((item) => {\n            ret.push(item)\n          })\n        } catch (e) {\n          console.error(`Error while reading CSS rules from ${sheet.href}`, e)\n        }\n      }\n    })\n\n    return ret\n  })\n}\n\nfunction getWebFontRules(cssRules: CSSStyleRule[]): CSSStyleRule[] {\n  return cssRules\n    .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n    .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')))\n}\n\nasync function parseWebFontRules<T extends HTMLElement>(\n  node: T,\n  options: Options,\n) {\n  if (node.ownerDocument == null) {\n    throw new Error('Provided element is not within a Document')\n  }\n\n  const styleSheets = toArray<CSSStyleSheet>(node.ownerDocument.styleSheets)\n  const cssRules = await getCSSRules(styleSheets, options)\n\n  return getWebFontRules(cssRules)\n}\n\nexport async function getWebFontCSS<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<string> {\n  const rules = await parseWebFontRules(node, options)\n  const cssTexts = await Promise.all(\n    rules.map((rule) => {\n      const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null\n      return embedResources(rule.cssText, baseUrl, options)\n    }),\n  )\n\n  return cssTexts.join('\\n')\n}\n\nexport async function embedWebFonts<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const cssText =\n    options.fontEmbedCSS != null\n      ? options.fontEmbedCSS\n      : options.skipFonts\n      ? null\n      : await getWebFontCSS(clonedNode, options)\n\n  if (cssText) {\n    const styleNode = document.createElement('style')\n    const sytleContent = document.createTextNode(cssText)\n\n    styleNode.appendChild(sytleContent)\n\n    if (clonedNode.firstChild) {\n      clonedNode.insertBefore(styleNode, clonedNode.firstChild)\n    } else {\n      clonedNode.appendChild(styleNode)\n    }\n  }\n}\n","import { WebCell, attribute, component, observer } from 'web-cell';\nimport { observable } from 'mobx';\nimport { InputGroup, FormControl, Button } from 'boot-cell';\n\nimport { session } from '../model';\n\nexport interface SessionBox extends WebCell {}\n\n@component({\n    tagName: 'session-box',\n    mode: 'open'\n})\n@observer\nexport class SessionBox extends HTMLElement implements WebCell {\n    @attribute\n    @observable\n    accessor countDown = 0;\n\n    connectedCallback() {\n        session.getProfile();\n    }\n\n    handleSMSCode = () => {\n        this.countDown = 60;\n\n        const timer = setInterval(\n                () => --this.countDown! || clearInterval(timer),\n                1000\n            ),\n            { elements } = this.firstElementChild as HTMLFormElement;\n\n        return session.sendSMSCode(\n            (elements.namedItem('phone') as HTMLInputElement).value\n        );\n    };\n\n    handleSignIn = (event: Event) => {\n        event.preventDefault();\n\n        const form = new FormData(event.target as HTMLFormElement);\n\n        return session.signIn(\n            form.get('phone') as string,\n            form.get('code') as string\n        );\n    };\n\n    renderForm() {\n        const { countDown } = this;\n\n        return (\n            <form\n                className=\"m-3 p-3 border rounded\"\n                onSubmit={this.handleSignIn}\n            >\n                <h2 className=\"text-center mb-3\">参会者登录</h2>\n\n                <InputGroup size=\"lg\" className=\"mb-3\">\n                    <FormControl\n                        type=\"tel\"\n                        name=\"phone\"\n                        maxLength={11}\n                        required\n                        placeholder=\"手机号\"\n                    />\n                </InputGroup>\n\n                <InputGroup size=\"lg\" className=\"mb-3\">\n                    <FormControl\n                        name=\"code\"\n                        required\n                        placeholder=\"短信验证码\"\n                        autocomplete=\"off\"\n                    />\n                    <Button\n                        variant=\"outline-secondary\"\n                        onClick={this.handleSMSCode}\n                        disabled={!!countDown}\n                    >\n                        {countDown ? countDown + 's' : '获取'}\n                    </Button>\n                </InputGroup>\n\n                <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    className=\"d-block w-100\"\n                    size=\"lg\"\n                >\n                    登录\n                </Button>\n            </form>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://unpkg.com/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n                />\n                {session.user ? <slot /> : this.renderForm()}\n            </>\n        );\n    }\n}\n",".box {\n    background: rgb(12, 14, 174);\n}\n.cover {\n    left: 0;\n    top: 0;\n}\n","module.exports = new __parcel__URL__(\"banner.c8e98b18.jpg\").toString();","module.exports = new __parcel__URL__(\"BuyCode.5f20ce22.png\").toString();"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","_classDescriptor","_classThis","_imageURI_decorators","_classDecorators","_classExtraInitializers","_classSuper","_imageURI_initializers","_imageURI_extraInitializers","value","$001ad9c74aa66c44$export$2e2bcd8739ae039","_InvitationCard_imageURI_accessor_storage","f","name","$b603G","$89MmN","$a2E6i","$fonQc","$iYhfJ","$k3z6B","$ij4G1","$f1rSJ","$4tPGE","$687Jw","$001ad9c74aa66c44$var$__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","TypeError","_","kind","key","target","prototype","descriptor","getOwnPropertyDescriptor","done","i","length","context","p","access","addInitializer","push","result","init","unshift","$001ad9c74aa66c44$var$__runInitializers","thisArg","useValue","arguments","call","$001ad9c74aa66c44$var$__classPrivateFieldGet","receiver","state","has","$001ad9c74aa66c44$var$__classPrivateFieldSet","component","tagName","observer","HTMLElement","constructor","writable","_arguments","P","generator","imageURI","box","querySelector","toPng","Promise","resolve","reject","fulfilled","step","next","rejected","adopt","then","apply","renderCard","username","gender","session","user","jsxs","className","children","jsx","Image","fluid","src","render","SessionBox","onClick","showImage","cover","hidden","WeakMap","description","concat","_a","_metadata","Symbol","metadata","create","observable","static","private","obj","$dcfb36a1d813879c$export$aba256f33615c92e","$fcbiq","$lk6FJ","$6bqmm","$7AFXT","$68Esz","$dcfb36a1d813879c$export$20d300cb2d558b7","node","options","width","height","getImageSize","clonedNode","cloneNode","embedWebFonts","embedImages","applyStyle","nodeToDataURL","$dcfb36a1d813879c$export$f87f6982d1fd4f81","svg","img","createImage","canvas","document","createElement","getContext","ratio","pixelRatio","getPixelRatio","canvasWidth","canvasHeight","skipAutoScale","checkCanvasDimensions","style","backgroundColor","fillStyle","fillRect","drawImage","toDataURL","$b100bd344ebc86b8$export$ae8e35ea29ddac22","$cEnVM","$h6N6c","$4rDqm","$b100bd344ebc86b8$var$cloneCanvasElement","dataURL","$b100bd344ebc86b8$var$cloneVideoElement","video","currentSrc","ctx","clientWidth","clientHeight","poster","contentType","getMimeType","resourceToDataURL","$b100bd344ebc86b8$var$cloneIFrameElement","iframe","contentDocument","body","_b","$b100bd344ebc86b8$var$cloneSingleNode","isInstanceOfElement","HTMLCanvasElement","HTMLVideoElement","HTMLIFrameElement","$b100bd344ebc86b8$var$isSlotElement","toUpperCase","$b100bd344ebc86b8$var$cloneChildren","nativeNode","assignedNodes","toArray","childNodes","shadowRoot","reduce","deferred","child","clonedChild","appendChild","$b100bd344ebc86b8$var$ensureSVGSymbols","clone","uses","querySelectorAll","processedDefs","id","use","getAttribute","exist","definition","nodes","values","ns","createElementNS","setAttribute","position","overflow","display","defs","isRoot","filter","Element","$b100bd344ebc86b8$var$cloneCSSStyle","targetStyle","sourceStyle","window","getComputedStyle","cssText","transformOrigin","forEach","getPropertyValue","endsWith","reducedFont","Math","floor","parseFloat","substring","setProperty","getPropertyPriority","clonePseudoElements","HTMLTextAreaElement","innerHTML","HTMLInputElement","$b100bd344ebc86b8$var$cloneSelectValue","HTMLSelectElement","selectedOption","Array","from","clonedSelect","find","$935bc8a89a8048db$export$8df63687a708ed2e","$935bc8a89a8048db$var$clonePseudoElement","pseudo","content","uuid","err","styleElement","$935bc8a89a8048db$var$getPseudoElementStyle","selector","$935bc8a89a8048db$var$formatCSSText","replace","map","priority","join","createTextNode","$4782dfe4508d9351$export$f85c16a6d62f7d63","$4782dfe4508d9351$export$31b40729666a4ae0","$4782dfe4508d9351$export$45b10814cc054894","$4782dfe4508d9351$export$ada5537b2c061996","$4782dfe4508d9351$export$d39ce20a37bba061","$4782dfe4508d9351$export$c2c809a2fe6b0f1a","$4782dfe4508d9351$export$403d539f215df596","$4782dfe4508d9351$export$ec664d7487540b","$4782dfe4508d9351$export$b62810fb8ca515fa","$4782dfe4508d9351$export$3a92fc9ec83ef360","$4Jj9n","url","baseUrl","match","location","protocol","doc","implementation","createHTMLDocument","base","head","href","counter","random","toString","slice","arrayLike","arr","l","$4782dfe4508d9351$var$px","styleProperty","val","win","ownerDocument","defaultView","targetNode","$4782dfe4508d9351$var$getNodeWidth","leftBorder","rightBorder","$4782dfe4508d9351$var$getNodeHeight","topBorder","bottomBorder","FINAL_PROCESS","env","devicePixelRatio","Number","isNaN","parseInt","$4782dfe4508d9351$var$canvasDimensionLimit","toBlob","type","quality","binaryString","atob","undefined","split","len","binaryArray","Uint8Array","charCodeAt","Blob","decode","onload","onerror","crossOrigin","decoding","$4782dfe4508d9351$export$fe77aa9c02de4599","XMLSerializer","serializeToString","encodeURIComponent","html","xmlns","foreignObject","instance","nodePrototype","getPrototypeOf","$371a3837fd81d701$var$cachedSetTimeout","$371a3837fd81d701$var$cachedClearTimeout","$371a3837fd81d701$var$currentQueue","$371a3837fd81d701$var$process","$371a3837fd81d701$var$defaultSetTimout","Error","$371a3837fd81d701$var$defaultClearTimeout","$371a3837fd81d701$var$runTimeout","fun","setTimeout","clearTimeout","$371a3837fd81d701$var$queue","$371a3837fd81d701$var$draining","$371a3837fd81d701$var$queueIndex","$371a3837fd81d701$var$cleanUpNextTick","$371a3837fd81d701$var$drainQueue","timeout","run","$371a3837fd81d701$var$runClearTimeout","marker","$371a3837fd81d701$var$Item","array","$371a3837fd81d701$var$noop","nextTick","args","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$c749153f13d96f99$export$200548c990602f61","$c749153f13d96f99$var$WOFF","$c749153f13d96f99$var$JPEG","$c749153f13d96f99$var$mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","webp","$c749153f13d96f99$var$getExtension","exec","toLowerCase","$33c843df93354230$export$f8a05efa20ffd5a","search","$33c843df93354230$export$68336ea1617fa80a","mimeType","$33c843df93354230$export$c20a8b76c95b0d41","process","res","fetch","status","blob","reader","FileReader","onloadend","error","readAsDataURL","$33c843df93354230$export$bdf0422c029b202a","$33c843df93354230$var$cache","resourceUrl","includeQueryParams","cacheKey","test","cacheBust","Date","getTime","fetchRequestInit","headers","imagePlaceholder","msg","message","console","warn","$f860a42c288ac7a8$export$6660fa8dd20e53aa","$2t7gQ","$f860a42c288ac7a8$var$embedProp","propName","propValue","cssString","embedResources","$f860a42c288ac7a8$var$embedBackground","$f860a42c288ac7a8$var$embedImageNode","isImageElement","HTMLImageElement","isDataUrl","SVGImageElement","baseVal","image","loading","srcset","$f860a42c288ac7a8$var$embedChildren","deferreds","all","$1cc3ee04d2481668$export$7b668369e5eab853","$1cc3ee04d2481668$export$3d88803585cbbc21","$1cc3ee04d2481668$var$URL_REGEX","$1cc3ee04d2481668$var$URL_WITH_FORMAT_REGEX","$1cc3ee04d2481668$var$FONT_SRC_REGEX","$1cc3ee04d2481668$export$2be46bb7e96db87f","resourceURL","baseURL","getContentFromUrl","resolvedURL","resolveUrl","makeDataUrl","$1cc3ee04d2481668$var$toRegex","escaped","RegExp","filteredCSSText","$1cc3ee04d2481668$var$filterPreferredFontFormat","str","preferredFontFormat","format","urls","$1cc3ee04d2481668$export$d04549d631b8762d","raw","quotation","css","$4808379cf1566c37$export$d63a6b7859608045","manual","keys","$586c729879695f49$export$253c9aa3d83a57b6","$586c729879695f49$export$2c2c83b77c8cb421","$586c729879695f49$var$cssFetchCache","$586c729879695f49$var$fetchCSS","cache","text","$586c729879695f49$var$embedFonts","data","regexUrl","fontLocs","loc","startsWith","URL","fetchAsDataURL","$586c729879695f49$var$parseCSS","source","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","$586c729879695f49$var$getCSSRules","styleSheets","ret","sheet","cssRules","item","index","CSSRule","IMPORT_RULE","importIndex","rule","insertRule","catch","inline","$586c729879695f49$var$parseWebFontRules","FONT_FACE_RULE","shouldEmbed","rules","cssTexts","parentStyleSheet","fontEmbedCSS","skipFonts","styleNode","sytleContent","firstChild","insertBefore","_countDown_decorators","_countDown_initializers","_countDown_extraInitializers","$d53da11331b77c2b$export$a476b4f7d4df5522","_SessionBox_countDown_accessor_storage","$d53da11331b77c2b$var$__esDecorate","$d53da11331b77c2b$var$__runInitializers","$d53da11331b77c2b$var$__classPrivateFieldGet","$d53da11331b77c2b$var$__classPrivateFieldSet","mode","countDown","timer","setInterval","clearInterval","elements","firstElementChild","sendSMSCode","namedItem","event","preventDefault","form","FormData","signIn","connectedCallback","getProfile","renderForm","onSubmit","handleSignIn","InputGroup","size","FormControl","maxLength","required","placeholder","autocomplete","Button","variant","handleSMSCode","disabled","Fragment","rel","attribute","$aefc93beca39863e$export$827f4ee28efc37","$aefc93beca39863e$export$4bdbf921f0c0fd8c"],"version":3,"file":"InvitationCard.a9534b0d.js.map"}